---
swagger: "2.0"
info:
  description: "MobileServicesManagement APIs\n\n   ---\n     \n ## [Source view](https://app.swaggerhub.com/apis/kpn/MobileServicesManagement-KPN/)<br/>\n [Documentation view](https://app.swaggerhub.com/apis/kpn/MobileServicesManagement-KPN/)\n \n ---\n \n ## [KPN API Store](https://developer.kpn.com/)<br/>\n [Getting Started](https://developer.kpn.com/getting-started)\n \n\n ---"
  version: v11
  title: MobileServicesManagement-KPN
  termsOfService: https://developer.kpn.com/legal
  contact:
    name: API Support
    url: https://developer.kpn.com/support
    email: api_developer@kpn.com
host: api-prd.kpn.com
basePath: /mobile/kpn/mobileservices
tags:
- name: rest-address-controller
  description: Rest Address Controller
- name: rest-contract-controller
  description: Rest Contract Controller
- name: rest-threshold-controller
  description: Rest Threshold Controller
- name: rest-business-voice-mail-controller
  description: Rest Business Voice Mail Controller
- name: rest-contracting-controller
  description: Rest Contracting Controller
- name: rest-separate-fixed-mobile-controller
  description: Rest Separate Fixed Mobile Controller
- name: rest-template-controller
  description: Rest Template Controller
- name: rest-invoice-controller
  description: Rest Invoice Controller
- name: rest-hierarchy-controller
  description: Rest Hierarchy Controller
- name: rest-subscriber-controller
  description: Rest Subscriber Controller
- name: rest-user-controller
  description: Rest User Controller
- name: rest-block-sim-controller
  description: Rest Block Sim Controller
- name: rest-contract-terminate-controller
  description: Rest Contract Terminate Controller
- name: rest-hardware-enrollment-controller
  description: Rest Hardware Enrollment Controller
- name: rest-order-controller
  description: Rest Order Controller
- name: rest-track-and-trace-controller
  description: Rest Track And Trace Controller
schemes:
- https
paths:
  /track-and-trace/orders:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get order list
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getOrdersUsingGET
      produces:
      - '*/*'
      parameters:
      - name: currentUserOrdersOnly
        in: query
        required: false
        type: boolean
        default: false
        x-example: false
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - CREATION_DATE
        - STATUS
        - KPN_REFERENCE
        - ORDERED_FOR
        - CUSTOMER_REFERENCE
      - name: status
        in: query
        required: true
        type: array
        items:
          type: string
          enum:
          - IN_PROGRESS
          - UNAUTHORIZED
          - NEW
          - CLOSED
          - CANCELED
          - REJECTED
          - DRAFT
          - THIRD_PARTY
          - HOLD_CUSTOMER
          - WAITING
        collectionFormat: multi
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      - name: withRequiredActionFirst
        in: query
        required: false
        type: boolean
        default: true
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Order_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/orders/{id}:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get order details
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getOrderDetailsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderDetails1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/orders/{id}/cancel:
    post:
      tags:
      - rest-track-and-trace-controller
      summary: Cancel order
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: cancelOrderUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: note
        in: query
        description: note
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/orders/{id}/hardware:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get list of hardware which was ordered in the order with the given id
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getHardwareForOrderUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Hardware'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/orders/{id}/porting-data:
    post:
      tags:
      - rest-track-and-trace-controller
      summary: Change port in date or customer number
      description: "Endpoint allows to change both : customer number and wish date in one request or change only one parameter. \nThere are several possibility to set data:\n| newWishDate | asap | customerNumber | result                              |\n|-------------|--------|----------------|-------------------------------------|\n| date        | false  | null           | change only wish date               |\n| null        | true   | null           | change only wish date to ASAP       |\n| null        | true   | number         | change customer number and wishDate |\n| date        | false  | number         | change customer number and wishDate |\n| date        | true   |   *            | validation error                    |\n| null        | false  | null           | validation error                    |\n\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>"
      operationId: changePortingDataUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: data
        description: data
        required: true
        schema:
          $ref: '#/definitions/ChangePortingData'
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/orders/{id}/pretty:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get order details in pretty form
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getPrettyOrderDetailsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrettyOrderDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/overview:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get number of orders grouped by orders type
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getOverviewUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int64
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/returned-hardware-service-requests:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get return hardware service requests list
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getReturnedHardwareServiceRequestUsingGET
      produces:
      - '*/*'
      parameters:
      - name: currentUserOrdersOnly
        in: query
        required: false
        type: boolean
        default: false
        x-example: false
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: status
        in: query
        required: true
        type: array
        items:
          type: string
          enum:
          - IN_PROGRESS
          - UNAUTHORIZED
          - NEW
          - CLOSED
          - CANCELED
          - REJECTED
          - DRAFT
          - THIRD_PARTY
          - HOLD_CUSTOMER
          - WAITING
        collectionFormat: multi
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      - name: withRequiredActionFirst
        in: query
        required: false
        type: boolean
        default: true
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_ReturnedHardwareServiceRequests_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/service-requests:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get service requests list
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getServiceRequestsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: Content-Language
        in: header
        description: Content-Language
        required: false
        type: string
      - name: currentUserOrdersOnly
        in: query
        required: false
        type: boolean
        default: false
        x-example: false
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - CREATION_DATE
        - STATUS
        - KPN_REFERENCE
        - REQUEST_BY
        - REQUEST_FOR
        - TYPE
        - CUSTOMER_REFERENCE
      - name: status
        in: query
        required: true
        type: array
        items:
          type: string
          enum:
          - IN_PROGRESS
          - UNAUTHORIZED
          - NEW
          - CLOSED
          - CANCELED
          - REJECTED
          - DRAFT
          - THIRD_PARTY
          - HOLD_CUSTOMER
          - WAITING
        collectionFormat: multi
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      - name: withRequiredActionFirst
        in: query
        required: false
        type: boolean
        default: true
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_ServiceRequest_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/service-requests/{id}:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get service requests details
      description: |-
        The possible keys of `attributes` map in response object:<div style='max-height: 400px; overflow: auto; width: 100%'>
        <dl>
        <dt><b>Attribute name</b></dt><dd><b>Meaning</b></dd>
        <dt>login</dt><dd>Login</dd>
        <dt>roles</dt><dd>Roles</dd>
        <dt>firstName</dt><dd>First name</dd>
        <dt>lastName</dt><dd>Last name</dd>
        <dt>surnamePrefix</dt><dd>Surname prefix</dd>
        <dt>email</dt><dd>E-mail</dd>
        <dt>dateOfBirth</dt><dd>Date of birth</dd>
        <dt>vip</dt><dd>VIP</dd>
        <dt>employeeNumber</dt><dd>Employee number</dd>
        <dt>gender</dt><dd>Gender</dd>
        <dt>salutation</dt><dd>Salutation</dd>
        <dt>preferredLanguage</dt><dd>Preferred language</dd>
        <dt>comments</dt><dd>Comments</dd>
        <dt>accesspointNameMSISDN</dt><dd>Mobile number</dd>
        <dt>accesspointNameSIM</dt><dd>SIM card number</dd>
        <dt>accesspointNameIMSI</dt><dd>IMSI</dd>
        <dt>IMEI</dt><dd>IMEI</dd>
        <dt>Hanset_IMEI_number</dt><dd>IMEI</dd>
        <dt>accesspointNameFixedNumber</dt><dd>Fixed Number</dd>
        <dt>activeTo</dt><dd>Active to</dd>
        <dt>contractName</dt><dd>Subscription or device name</dd>
        <dt>totalOnetimePrice</dt><dd>One time price</dd>
        <dt>totalRecurrentPrice</dt><dd>Recurring price</dd>
        <dt>deferredPrice</dt><dd>Deferred price</dd>
        <dt>newUiccId</dt><dd>New SIM card number</dd>
        <dt>movedGroupName</dt><dd>Moved account</dd>
        <dt>subscriberAccountId</dt><dd>Old location</dd>
        <dt>destinationAccount</dt><dd>New location</dd>
        <dt>selectedDuoUiccid</dt><dd>Selected Duo SIM card number</dd>
        <dt>projectId</dt><dd>Project ID</dd>
        <dt>new_fixed_number</dt><dd>New fixed number</dd>
        <dt>new_desk_number</dt><dd>New extension</dd>
        <dt>oldUserGroupName</dt><dd>Previous user group</dd>
        <dt>newUserGroupName</dt><dd>New user group</dd>
        <dt>vpnName</dt><dd>VPN name</dd>
        <dt>deskNumber</dt><dd>Extension</dd>
        <dt>accesspointNameDeskNumber</dt><dd>Extension</dd>
        <dt>mobileAddress</dt><dd>Mobile number</dd>
        <dt>enterpriseName</dt><dd>Enterprise name</dd>
        <dt>enterpriseID</dt><dd>Enterprise ID</dd>
        <dt>mobilityGroupName</dt><dd>Fixed-Mobile PBX name</dd>
        <dt>userGroupName</dt><dd>User group</dd>
        <dt>enterpriseUserGroup</dt><dd>User group</dd>
        <dt>initialUserPrincipalName</dt><dd>User Principal Name</dd>
        <dt>sipAccountName</dt><dd>SIP account name</dd>
        <dt>accessInstanceAttributeinitialUserPrincipalName</dt><dd>User Principal Name</dd>
        <dt>accesspointNameQueuePhoneNumber</dt><dd>Queue phone number</dd>
        <dt>accesspointNameSipAccountName</dt><dd>SIP account name</dd>
        <dt>subscriptionAmount</dt><dd>New subscription amount</dd>
        <dt>contract_contact_name</dt><dd>Contract contact person (name)</dd>
        <dt>contract_contact_phone</dt><dd>Contract contact person (phone)</dd>
        <dt>contract_contact_mail</dt><dd>Contract contact person (mail)</dd>
        <dt>financial_contact_name</dt><dd>Financial contact person (name)</dd>
        <dt>financial_contact_phone</dt><dd>Financial contact person (phone)</dd>
        <dt>financial_contact_mail</dt><dd>Financial contact person (mail)</dd>
        <dt>technical_contact_name</dt><dd>Technical contact Person (name)</dd>
        <dt>technical_contact_phone</dt><dd>Technical contact Person (phone)</dd>
        <dt>technical_contact_mail</dt><dd>Technical contact Person (mail)</dd>
        <dt>deviceOption</dt><dd>Device option</dd>
        <dt>deviceType_label</dt><dd>Device type</dd>
        <dt>macAddress</dt><dd>Mac address</dd>
        <dt>deviceName</dt><dd>Device name</dd>
        <dt>sacGroupAccountId_label</dt><dd>Location account</dd>
        <dt>groupId</dt><dd>Location</dd>
        <dt>vGroupMovingToID</dt><dd>New location</dd>
        <dt>pbxName</dt><dd>PBX</dd>
        <dt>groupCitemId_label</dt><dd>Group</dd>
        <dt>Fixed</dt><dd>Alternate fixed number</dd>
        <dt>DeskNumber</dt><dd>Alternate extension</dd>
        <dt>billing_retention_period</dt><dd>Financial data retention period (months)</dd>
        <dt>managedGroupName</dt><dd>Authorized for</dd>
        <dt>subscriptionType</dt><dd>Subscription type</dd>
        <dt>CurrentNetworkOperator</dt><dd>Current network operator</dd>
        <dt>CurrentServiceProvider</dt><dd>Current service provider</dd>
        <dt>Customer_name_at_current_provider</dt><dd>Customer name at current provider</dd>
        <dt>Current_contract_number</dt><dd>Customer number at current provider</dd>
        <dt>UIccId</dt><dd>Current SIM card number</dd>
        <dt>Initials</dt><dd>Initials</dd>
        <dt>FamilyNamePrefix</dt><dd>Family name prefix</dd>
        <dt>FamilyName</dt><dd>Family name</dd>
        <dt>delivery_TT_id</dt><dd>Delivery Track&trace ID</dd>
        <dt>IsAppleDEP</dt><dd>Apple DEP</dd>
        <dt>IsSamsungKNOX</dt><dd>Samsung KNOX</dd>
        <dt>keepCurrentSim</dt><dd>Keep existing SIM card</dd>
        <dt>Note</dt><dd>Note</dd>
        <dt>Porting_wish_date</dt><dd>Preferred transition date</dd>
        <dt>returnReason</dt><dd>Reason for return</dd>
        <dt>returnRemarks</dt><dd>Remarks</dd>
        <dt>companyName</dt><dd>Company name</dd>
        <dt>companyNamePronounciation</dt><dd>Comapny name pronounciation</dd>
        <dt>businessVoiceMailMessageText</dt><dd>Chosen business voicemail message</dd>
        </dl>
        <div>
        <style type="text/css">  dl {
            display: flex;
            flex-flow: row wrap;
          }
          dt {
            flex-basis: 20%;
            text-align: right;
          }
          dd {
            flex-basis: 70%;
            flex-grow: 1;
          }
        </style>

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getServiceRequestDetailsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceRequestDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/service-requests/{id}/attachments/{attachmentId}:
    get:
      tags:
      - rest-track-and-trace-controller
      summary: Get attachment with given id and serviceRequestId
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: getAttachmentUsingGET
      produces:
      - application/json
      parameters:
      - name: attachmentId
        in: path
        description: attachmentId
        required: true
        type: integer
        format: int64
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Serializable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /track-and-trace/service-requests/{id}/cancel:
    post:
      tags:
      - rest-track-and-trace-controller
      summary: Cancel service request
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_track_and_trace</li><li>privileges_orders_authorization</li></ul>
      operationId: cancelServiceReqestUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: note
        in: query
        description: note
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/apple-dep:
    post:
      tags:
      - rest-hardware-enrollment-controller
      summary: Register Apple Dep
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: registerAppleDepUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/HardwareEnrollmentRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/authorize:
    post:
      tags:
      - rest-order-controller
      summary: Authorize order
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_orders_authorization</li></ul>
      operationId: authorizeUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: authorizeRequest
        description: authorizeRequest
        required: true
        schema:
          $ref: '#/definitions/AuthorizeRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/block-sim:
    post:
      tags:
      - rest-block-sim-controller
      summary: Block sim for given contract
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: blockSimUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: blockSimRequest
        description: blockSimRequest
        required: true
        schema:
          $ref: '#/definitions/BlockSimRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/move:
    post:
      tags:
      - rest-order-controller
      summary: Move contract with given contractId to group with given destinationGroupId
      description: |-
        Wish date should be empty, current or in the future. Reference number cannot exceed 25 character. When individualBundle field is set as true in ContractDetails, user is supposed to set moveAddonBundles to true or false.Otherwise it will be used as false by default. If individualBundle is false, the value of the field moveAddonBundles will not be used.

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: moveContractUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: moveContractRequest
        description: moveContractRequest
        required: true
        schema:
          $ref: '#/definitions/MoveContractRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/operations:
    get:
      tags:
      - rest-order-controller
      summary: Get information about operations available for given contract.
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getAvailableOperationsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: contractId
        in: query
        description: contractId
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OperationsAvailability'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/porting-out:
    post:
      tags:
      - rest-order-controller
      summary: Port out contract
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: portingOutUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: portingOutRequest
        description: portingOutRequest
        required: true
        schema:
          $ref: '#/definitions/PortingOutRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/replace-sim:
    post:
      tags:
      - rest-order-controller
      summary: Replace sim for given contract
      description: |-
        If eSim is used email is mandatory.

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: replaceSimUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: replaceSimRequest
        description: replaceSimRequest
        required: true
        schema:
          $ref: '#/definitions/ReplaceSimRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/replace-sim/validator:
    post:
      tags:
      - rest-order-controller
      summary: Validate if sim card number can be used in replace sim operation
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: validateUiccidUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: uiccidValidationData
        description: uiccidValidationData
        required: true
        schema:
          $ref: '#/definitions/UiccidValidationData'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/return-hardware:
    post:
      tags:
      - rest-order-controller
      summary: Return hardware
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: returnHardwareUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: returnHardwareRequest
        description: returnHardwareRequest
        required: true
        schema:
          $ref: '#/definitions/ReturnHardwareRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/samsung-knox:
    post:
      tags:
      - rest-hardware-enrollment-controller
      summary: Register Samsung Knox
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: registerSamsungKnoxUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/HardwareEnrollmentRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/terminate:
    post:
      tags:
      - rest-contract-terminate-controller
      summary: Terminate contract
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: terminateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: terminateContractRequest
        description: terminateContractRequest
        required: true
        schema:
          $ref: '#/definitions/TerminateContractRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/terminate/termination-fee:
    get:
      tags:
      - rest-contract-terminate-controller
      summary: Get termination fee for giver contract and termination date
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getTerminationFeeUsingGET
      produces:
      - '*/*'
      parameters:
      - name: contractId
        in: query
        description: contractId
        required: true
        type: integer
        format: int64
      - name: wishDate
        in: query
        description: wishDate
        required: true
        type: string
        format: date-time
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TerminationFee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/terminate/{contractId}/min-date:
    get:
      tags:
      - rest-contract-terminate-controller
      summary: Get first possible termination date for given contract
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getMinFreeTerminationDateUsingGET
      produces:
      - '*/*'
      parameters:
      - name: contractId
        in: path
        description: contractId
        required: true
        type: integer
        format: int32
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: string
            format: date-time
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /order/unblock-sim:
    post:
      tags:
      - rest-block-sim-controller
      summary: Unblock sim for given contract
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: unblockSimUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: unblockSimOrder
        description: unblockSimOrder
        required: true
        schema:
          $ref: '#/definitions/UnblockSimRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children:
    get:
      tags:
      - rest-hierarchy-controller
      summary: Get immediate children of given parent hierarchy entity
      description: "Return all children of given hierarchy entity which user manages. If no parent id given it returns root entities.<br><br>When `operationType` is given API returns also information if operation is possible for each item. For some oprations possibilty information is returned in context of object or objects passed with `contextIds` or alternately a single `contextId` For example if user wants to check if he can move a hierarchy item , he should use `operationType=MOVE_GROUP`If user wants to check if he can move a chosen item to a different hierarchy entity, he should use `operationType=MOVE_GROUP` with `contextIds` set to ids of items to be moved.\nUp to 10 items can be passed using `contextIds`. Currently only MOVE_GROUP operation supports multiple context items, for others, only first item will be used\n<br>The request is validated. Possible validation errors: \n| HTTP code | Error code                 | Description                                                                                   |\n|-----------|----------------------------|-----------------------------------------------------------------------------------------------|\n| `400`     | `MISSING_CONTEXT_ID`       | `operationType` is given but `contextId` is null                                              |\n| `400`     | `OPERATION_NOT_POSSIBLE`   | Given operation (`operationType`) not possible for all hierarchy entities                     |\n| `404`     | `CONTEXT_OBJECT_NOT_FOUND` | Context object of given id (`contextId`) can not be found or current user has no access to it |\n<br>When operation can be performed for specific hierarchy entity in response there will be information like this below:\n```\n\"operation\": {\n    \"blocked\": false,\n}\n```\n<br>Otherwise, if operation can not be executed there will be information like below:\n```\n\"operation\": {\n    \"blocked\": true,\n    \"reason\": \"<REASON>\"\n}\n```\n<br>Possible values of reason for `operationType=MOVE_CONTRACT` (id of single chosen contract as context):\n| Reason                                           | Description                                                                                                                                       |\n|--------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|\n| `FORBIDDEN_PARENT_FOR_PRODUCT`                   | This hierarchy entity type is not allowed to have contracts (only subscriber or debtor can have contracts).                                       |\n| `CANNOT_MOVE_TO_OLD_PARENT`                      | Cannot move contract to the same hierarchy entity (like from subscriber to the same subscriber).                                                  |\n| `FIXED_NUMBER_CANNOT_BE_MOVED_TO_THIS_VGROUP`    | Cannot move fix contract to hierarchy entity that already has fixed subscription (hierarchy entity may have contracted only one fix subscription) |\n| `ACCOUNT_BLOCKED`                                | Account is blocked for moving by a different order.                                                                                               |\n<br>Possible values of reason for `operationType=MOVE_GROUP` (without context):\n| Reason                                           | Description                                                       |\n|--------------------------------------------------|-------------------------------------------------------------------|\n| `WRONG_GROUP_TYPE`                               | Item of this type cannot be moved (applies to customer).          |\n| `CANNOT_MOVE_TEST_ACCOUNT`                       | Test employee accounts cannot be moved.                           |\n| `ACCOUNT_BLOCKED`                                | Moving operation is blocked by a different order                  |\n<br>Possible values of reason for `operationType=MOVE_GROUP` (ids of up to 10 moved item to move as context):\n| Reason                                           | Description                                                       |\n|--------------------------------------------------|-------------------------------------------------------------------|\n| `CANNOT_MOVE_TO_OLD_PARENT`                      | New parent can't be the same as old one.                          |\n| `GROUP_CANNOT_HAVE_CHILDREN`                     | This type of group can not have children.                         |\n| `CANNOT_MOVE_TO_MOVED_GROUP`                     | Destination group can not be the same as group that is being move |\n| `CANNOT_MOVE_TO_THIS_TYPE_OF_GROUP`              | Context group type can not be moved to this type of group.        |\n| `ONLY_SINGLE_TYPE_ALLOWED_IN_PATH`               | There can be only one entity of such type in path.                |\n| `REQUIRE_DEBTOR_IN_PATH`                         | Context group requires debtor above it.                           |\n| `CANNOT_MOVE_DEBTOR_UNDER_DEBTOR`                | Debtor can not be placed under another debtor.                    |\n| `CANNOT_MOVE_NON_SUBSCRIBER_BETWEEN_TWO_DEBTORS` | Only subscriber can be moved between debtors.                     |\n| `CANNOT_MOVE_TO_ANOTHER_IAM`                     | Can not move group between two differents company ids.            |\n<br>Possible values of reason for `operationType=ASSIGN_TO_HIERARCHY` (single manager employee id as context):\n| Reason                                           | Description                                      |\n|--------------------------------------------------|--------------------------------------------------|\n| `SUBSCRIBER_CANNOT_BE_ASSIGNED`                  | Subscriber cannot be assigned as managed entity. |\n| `GROUP_IS_ALREADY_ASSIGNED`                      | This group is already managed by given user.     |\n<br>Possible values of reason for `operationType=CREATE_COST_CENTER`:\n| Reason                                           | Description                                         |\n|--------------------------------------------------|-----------------------------------------------------|\n| `WRONG_GROUP_TYPE`                               | Cannot create cost center under this type of group. |\n| `REQUIRE_DEBTOR_IN_PATH`                         | Cost center requires debtor above it.               |\n| `ONLY_SINGLE_TYPE_ALLOWED_IN_PATH`               | There can be only one entity of such type in path.  |\n<br>Possible values of reason for `operationType=CREATE_CUSTOM_GROUP`:\n| Reason                                           | Description                                                |\n|--------------------------------------------------|------------------------------------------------------------|\n| `WRONG_GROUP_TYPE`                               | Cannot create virtual group as a child of given group type |\n<br>Possible values of reason for `operationType=REMOVE_GROUP`:\n| Reason                                           | Description                                                 |\n|--------------------------------------------------|-------------------------------------------------------------|\n| `WRONG_GROUP_TYPE`                               | Only custom group and cost center data can be modified.     |\n| `FORBIDDEN_PATH_WHEN_REMOVING`                   | Entity cannot be removed because that will cause error in items hierarchy. Exception is thrown when path in hierarchy is: ... -> CUSTOM_GROUP -> COST_CENTER -> CUSTOM_GROUP ... -> and user try to remove COST_CENTER. CUSTOM_GROUP cannot be under CUSTOM_GROUP.                                                                       |\n<br><strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: getChildrenUsingGET
      produces:
      - '*/*'
      parameters:
      - name: contextId
        in: query
        required: false
        type: integer
        format: int64
      - name: contextIds
        in: query
        required: false
        type: array
        items:
          type: integer
          format: int64
        collectionFormat: multi
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: id
        in: query
        required: false
        type: integer
        format: int64
      - name: includeCustomer
        in: query
        description: "Information if it should include customer. Default value: false."
        required: false
        type: boolean
        default: false
        x-example: false
      - name: includeGroups
        in: query
        description: "Information if it should include pure virtual groups. Default value: true."
        required: false
        type: boolean
        default: true
        x-example: true
      - name: operationType
        in: query
        required: false
        type: string
        enum:
        - MOVE_CONTRACT
        - MOVE_GROUP
        - ASSIGN_TO_HIERARCHY
        - CREATE_COST_CENTER
        - CREATE_CUSTOM_GROUP
        - REMOVE_GROUP
      - name: pattern
        in: query
        required: false
        type: string
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_VirtualHierarchyItem_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/cost-center:
    post:
      tags:
      - rest-hierarchy-controller
      summary: Create cost center
      description: "Create new cost center\nThe request is validated. Possible validation errors: \n| HTTP code | Error code                         | Description                                                  |\n|-----------|------------------------------------|--------------------------------------------------------------|\n| `400`     | `WRONG_GROUP_TYPE`                 | Cannot create cost center under this type of group           |\n| `400`     | `VALUE_NOT_UNIQUE`                 | `costCenterNumber` field must be unique                      |\n| `400`     | `ONLY_SINGLE_TYPE_ALLOWED_IN_PATH` | Only one cost center can be in path                          |\n| `400`     | `REQUIRE_DEBTOR_IN_PATH`           | Cost center requires debtor above it.                        |\n| `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | Hierarchy group with given `id` can not be found             |\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: createCostCenterUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/CreateCostCenterRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/move:
    post:
      tags:
      - rest-hierarchy-controller
      summary: Move specified hierarchy items to the chosen location
      description: "Returns ids and summaries of generated service requests, if any where created.\nUp to 10 items can be moved at the same time\nWish date is applied only when moving employess between debtors. If part of the items are moved within the same debtor, wish date will be ignored for these.\nReference number is only supported when moving emplyees or business location items. Otherwise no service requests are created\nThe request is validated. Possible validation errors: \n| HTTP code | Error code                         | Description                                                           |\n|-----------|------------------------------------|-----------------------------------------------------------------------|\n| `403`     | `ORDERING_IS_BLOCKED_FOR_CUSTOMER` | Current customer is frozen and can not order anything                 |\n| `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | One of moved hierarchy items or destination location not found        |\n| `400`     | `OPERATION_NOT_POSSIBLE`           | At least one of provided items cannot be moved to chosen destination. |\n| `400`     | `WISH_DATE_NOT_SUPPORTED`          | Wish date is only supported when moving emplyees between debtor. This must apply to at least one of the moved objects                                                                     |\n| `400`     | `REFERENCE_NUMBER_NOT_SUPPORTED`   | Reference number is only supported when moving emplyees or  business location items.                                                                                                 |\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: moveHierarchyItemsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/MoveGroupsParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BulkOrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/operations:
    get:
      tags:
      - rest-hierarchy-controller
      summary: Get operations availability for logged user
      description: "Return all operations with availability and reason if blocked. \n| Reason                                         | Description                                                       |\n|------------------------------------------------|-------------------------------------------------------------------|\n| `NO_REQUIRED_PRIVILEGE`                        | User doesn't have required privilege                                   |\n| `NO_ENTITIES_TO_USE`                           | There is no entity to execute this action on                           |\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: getHierarchyOperationsUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HierarchyOperationsAvailability'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/virtual-group:
    post:
      tags:
      - rest-hierarchy-controller
      summary: Create virtual group
      description: "Create new virtual group\nThe request is validated. Possible validation errors: \n| HTTP code | Error code                         | Description                                                |\n|-----------|------------------------------------|------------------------------------------------------------|\n| `400`     | `WRONG_GROUP_TYPE`                 | Cannot create virtual group as a child of given group type |\n| `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | Hierarchy group with given `id` can not be found           |\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: createVirtualGroupUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/CreateVirtualGroupRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/{id}:
    get:
      tags:
      - rest-hierarchy-controller
      summary: Get hierarchy entity details
      description: |-
        Get details for organisation structure entitity with given `id`.
        Different set of attributes is returned for different entity types. Supported item types are:<ul><li>`CUSTOMER`</li><li>`DEBTOR`</li><li>`COST_CENTER`</li><li>`CUSTOM_GROUP`</li><li>`BUSINESS_LOCATION`</li></ul>Details for `SUBSCRIBER` are not supported. `subscribers/{id}` should be used instead.
        <br>Possible exceptions:
        | HTTP code | Error code                         | Description                                                  |
        |-----------|------------------------------------|--------------------------------------------------------------|
        | `400`     | `WRONG_GROUP_TYPE`                 | Item of unsupported type                                     |
        | `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | Information for item with the given `id` cannot be found     |
        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getDetailsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HierarchyItemDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-hierarchy-controller
      summary: "Update hierarchy entity (cost center, custom group)"
      description: "Change custom group or cost center data\nThe request is validated. Possible validation errors: \n| HTTP code | Error code                         | Description                                                  |\n|-----------|------------------------------------|--------------------------------------------------------------|\n| `400`     | `WRONG_GROUP_TYPE`                 | Only custom group and cost center data can be modified       |\n| `400`     | `VALUE_REQUIRED`                   | `costCenterNumber` field is required for cost center         |\n| `400`     | `VALUE_NOT_UNIQUE`                 | `costCenterNumber` field must be unique within the customer  |\n| `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | Hierarchy group with given `id` can not be found             |\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: updateChildUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/UpdateChildRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/{id}/operations:
    get:
      tags:
      - rest-hierarchy-controller
      summary: Get operations availability for chosen item
      description: |-
        Get available operations for organisational hierarchy item with the given `id`.
        Possible operations are:<ul><li>`create subscriber`</li><li>`create cost center`</li><li>`create virtual group`</li><li>`edit item`</li><li>`move item`</li><li>`remove item`</li></ul>Operations for `SUBSCRIBER` are not supported. `subscribers/{id}/operations` should be used instead.
        <br>Possible exceptions:
        | HTTP code | Error code                         | Description                                                  |
        |-----------|------------------------------------|--------------------------------------------------------------|
        | `400`     | `WRONG_GROUP_TYPE`                 | Item of unsupported type                                     |
        | `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | Information for item with the given `id` cannot be found     |
        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getItemOperationsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HierarchyItemOperationsAvailability'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/children/{id}/remove:
    post:
      tags:
      - rest-hierarchy-controller
      summary: "Remove hierarchy entity (cost center, custom group)"
      description: "Remove custom group or cost center data. The underlying end users and organizational units will be moved to the next highest item in the organizational structure.\nThe request is validated. Possible validation errors: \n| HTTP code | Error code                         | Description                                                  |\n|-----------|------------------------------------|--------------------------------------------------------------|\n| `400`     | `WRONG_GROUP_TYPE`                 | Only custom group and cost center data can be modified       |\n| `404`     | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND` | Hierarchy group with given `id` can not be found             |\n| `400`     | `FORBIDDEN_PATH_WHEN_REMOVING`     | Entity cannot be removed because that will cause error in items hierarchy. Exception is thrown when path in hierarchy is: ... -> CUSTOM_GROUP -> COST_CENTER -> CUSTOM_GROUP ... -> and user try to remove COST_CENTER. CUSTOM_GROUP cannot be under CUSTOM_GROUP.                                      |\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: removeGroupUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/grip-entities:
    get:
      tags:
      - rest-user-controller
      summary: Get all grip entities not linked to subscriber
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getGripEntitiesUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GripEntity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers:
    get:
      tags:
      - rest-subscriber-controller
      summary: Find all subscribers whom user manages
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: findSubscribersUsingGET
      produces:
      - '*/*'
      parameters:
      - name: filters
        in: query
        description: "Possible columns:FIRSTNAME, LASTNAME, SURNAME_PREFIX, CONTRACTS, DEBTORNAME, FIXED_NUMBER, EMPLOYEE_NUMBER. For example: FIRSTNAME: \"abc\", \"abd\"; LASTNAME: \"add\", \"aad\""
        required: false
        type: string
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - FIRSTNAME
        - LASTNAME
        - DEBTORNAME
        - FIXED_NUMBER
        - EMPLOYEE_NUMBER
        - IS_USER
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      - name: userOnly
        in: query
        required: false
        type: boolean
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Subscriber_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-subscriber-controller
      summary: Create subscriber (with or without user)
      description: |-
        If you want to create both subscriber and user at the same time, you should fill userAdditionalInfo.
        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: createSubscriberUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/CreateSubscriberRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/link:
    post:
      tags:
      - rest-user-controller
      summary: Link existing subscriber to grip identity
      description: |-
        Possible errors when validating request:
         | ERROR CODE                                    | CODE  |DESCRIPTION |
        |-----------------------------------------------|-------|-------------------------------------------------------------------------------|
        | `ORDERING_IS_BLOCKED_FOR_CUSTOMER`            | `403` | Current customer is frozen and can not order anything                        .|
        | `VIRTUAL_HIERARCHY_ITEM_NOT_FOUND`            | `404` | given subscriber does not exist or user does not have access to him           |
        | `GRIP_ENTITY_NOT_FOUND`                       | `404` | given gripEntity does not exist or user does not have access to it            |
        | `ROLE_NOT_FOUND`                              | `404` | given role does not exist or user does not have access to it                  |
        | `MOBILE_OR_FIXED_NUMBER_IS_REQUIRED`          | `400` | mobile or fixed number must be passed in request                              |
        | `SUBSCRIBER_IS_ALREADY_USER`                  | `400` | given subscriber is already an user                                           |

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: linkSubscriberToGripIdentityUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/LinkSubscriberToGripRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/roles:
    get:
      tags:
      - rest-user-controller
      summary: Get all roles
      operationId: getAllRolesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: pattern
        in: query
        required: false
        type: string
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - NAME
        - SELECTED
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Role_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/roles/{roleId}/privileges:
    get:
      tags:
      - rest-user-controller
      summary: Get privileges for given role
      operationId: getRolePrivilegesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}:
    get:
      tags:
      - rest-subscriber-controller
      summary: Get subscriber details
      description: |-
        Operations availability will be removed. Please use 'subscribers/{id}/operations' instead
        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getSubscriberDetailsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SubscriberDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
      - rest-subscriber-controller
      summary: Update subscriber
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: updateSubscriberUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/UpdateSubscriberRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}/assign-entities:
    post:
      tags:
      - rest-user-controller
      summary: Assign hierarchy entities managed by employee
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: assignEntitiesUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/ManagedGroupAssignmentParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}/delete:
    post:
      tags:
      - rest-subscriber-controller
      summary: Delete subscriber
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: deleteSubscriberUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/DeleteSubscriberRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}/managed-entities:
    get:
      tags:
      - rest-user-controller
      summary: Get hierarchy entities managed by employee
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getManagedGroupsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VirtualHierarchyItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}/move:
    post:
      tags:
      - rest-subscriber-controller
      summary: Move subscriber
      description: "Moves subscriber to a different location in company hierachy. \n`destinationGroupId` should be chosen through `GET /hierarchy/chidlren` with `MOVE_GROUP` as `operatinType` and subscriber id as `contextId`. \n`wishDate` is only supported when moving between two debtors, otherwise the employee will be moved immediately \nService Request in Track & Trace will be created only when moving between debtors or cost centers. \n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>"
      operationId: moveSubscriberUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/MoveSubscriberRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}/operations:
    get:
      tags:
      - rest-subscriber-controller
      summary: Get subscriber operations availability
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getSubscriberOperationsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SubscriberOperationsAvailability'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{id}/unassign-entities:
    post:
      tags:
      - rest-user-controller
      summary: Assign hierarchy entities managed by employee
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: unassignEntitiesUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/ManagedGroupAssignmentParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{subscriberId}/contracts:
    get:
      tags:
      - rest-subscriber-controller
      summary: Find all contracts belonging to subscriber
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: findSubscriberContractsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: from
        in: query
        description: from
        required: false
        type: integer
        format: int32
      - name: order
        in: query
        description: order
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: subscriberId
        in: path
        description: subscriberId
        required: true
        type: integer
        format: int64
      - name: to
        in: query
        description: to
        required: false
        type: integer
        format: int32
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Contract_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{subscriberId}/contracts/overview:
    get:
      tags:
      - rest-subscriber-controller
      summary: Get contracts overview for a subscriber
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getContractOverviewForVGroupUsingGET
      produces:
      - '*/*'
      parameters:
      - name: subscriberId
        in: path
        description: subscriberId
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/PagedResult_Contract_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /hierarchy/subscribers/{subscriberId}/roles:
    get:
      tags:
      - rest-user-controller
      summary: Get roles for given subscriber user
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: getSubscriberUserRolesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: pattern
        in: query
        required: false
        type: string
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - NAME
        - SELECTED
      - name: subscriberId
        in: path
        description: subscriberId
        required: true
        type: integer
        format: int64
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Role_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-user-controller
      summary: Edit roles assigned for given subscriber user
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul>
      operationId: editSubscriberUserRolesUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/EditRolesRequest'
      - name: subscriberId
        in: path
        description: subscriberId
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /finances/billing-period:
    post:
      tags:
      - rest-invoice-controller
      summary: Change billing period for current customer
      description: |-
        Start service request of changing billing period for current customer.
        Possible errors:
        | HTTP code | Error code                         | Description                                                                      |
        |-----------|------------------------------------|----------------------------------------------------------------------------------|
        | `403`     | `ORDERING_IS_BLOCKED_FOR_CUSTOMER` | Current customer is frozen and can not order anything                           .|
        | `404`     | `OPERATION_BLOCKED`                | Given operation is blocked. Operation availability shows blocked and not visible.|

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul> <strong>and:</strong><ul> <li>privileges_billing_retention_portlet</li></ul>
      operationId: changeBillingPeriodUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/ChangeBillingPeriodRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /finances/billing-period/availability:
    get:
      tags:
      - rest-invoice-controller
      summary: Get billing period changing availability
      description: |-
        Get availability of changing billing period.

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li><li>privileges_bulk_upload_data_of_end_user</li></ul> <strong>and:</strong><ul> <li>privileges_billing_retention_portlet</li></ul>
      operationId: getBillingPeriodChangingAvailabilityUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OperationAvailability'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /finances/invoices:
    get:
      tags:
      - rest-invoice-controller
      summary: Get list of invoices for given debtor
      description: |-
        Possible errors:
        | HTTP code | Error code         | Description                                                  |
        |-----------|--------------------|--------------------------------------------------------------|
        | `404`     | `DEBTOR_NOT_FOUND` | Given debtor does not exist or user don't have access to him |

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_financial_documents_view</li></ul>
      operationId: getInvoicesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: debtorId
        in: query
        required: false
        type: integer
        format: int64
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: pattern
        in: query
        required: false
        type: string
      - name: searchFrom
        in: query
        description: Start date to search from in ISO format (YYYY-MM-DD)
        required: false
        type: string
        format: date-time
        x-example: 2000-10-31
      - name: searchTo
        in: query
        description: End date to search to in ISO format (YYYY-MM-DD)
        required: false
        type: string
        format: date-time
        x-example: 2020-10-31
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - NUMBER
        - DEBTOR_NAME
        - TYPE
        - DATE
        - PAY_BEFORE_DATE
        - TOTAL_AMOUNT
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      - name: type
        in: query
        required: false
        type: string
        enum:
        - CREDIT_NOTE
        - HARDWARE_ADJUSTMENT
        - HARDWARE_INVOICE
        - HARDWARE_INVOICE_ADJUSTMENT
        - SERVICE_ADJUSTMENT
        - SERVICE_INVOICE
        - SERVICE_INVOICE_ADJUSTMENT
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Invoice_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /finances/invoices/{id}:
    get:
      tags:
      - rest-invoice-controller
      summary: Download the invoice as pdf file
      description: |-
        Possible errors:
        | HTTP code | Error code          | Description                       |
        |-----------|---------------------|-----------------------------------|
        | `404`     | `INVOICE_NOT_FOUND` | Invoice with given id not found   |

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_financial_documents_view</li></ul>
      operationId: downloadInvoiceUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: string
            format: byte
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /address/all:
    get:
      tags:
      - rest-address-controller
      summary: Get a list of all addresses
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getAllAddressesUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DeliveryAddress'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /address/customer:
    get:
      tags:
      - rest-address-controller
      summary: Get a list of general addresses
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getGeneralAddressesUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DeliveryAddress'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-address-controller
      summary: Add new general address
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: newGeneralAddressUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: deliveryAddress
        description: deliveryAddress
        required: true
        schema:
          $ref: '#/definitions/DeliveryAddressRequest1'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeliveryAddress'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /address/user:
    get:
      tags:
      - rest-address-controller
      summary: Get a list of personal addresses
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getPersonalAddressesUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DeliveryAddress'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-address-controller
      summary: Add new personal address
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: newPersonalAddressUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: deliveryAddress
        description: deliveryAddress
        required: true
        schema:
          $ref: '#/definitions/DeliveryAddressRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeliveryAddress'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /address/{id}/delete:
    post:
      tags:
      - rest-address-controller
      summary: Delete given address from general or personal addresses
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: deleteAddressUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /address/{id}/edit:
    post:
      tags:
      - rest-address-controller
      summary: Update personal or general address
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: updateAddressUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: deliveryAddress
        description: deliveryAddress
        required: true
        schema:
          $ref: '#/definitions/DeliveryAddressRequest1'
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/all:
    get:
      tags:
      - rest-contract-controller
      summary: Get all contracts.
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li></ul>
      operationId: getContractsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: Content-Language
        in: header
        description: Content-Language
        required: false
        type: string
      - name: category
        in: query
        required: false
        type: string
        enum:
        - MOBILE
        - FIXED
        - FIXED_MOBILE
        - HARDWARE
        - SKYPE_FOR_BUSINESS
        - SOFTWARE
        - OTHER
      - name: filters
        in: query
        description: "Possible columns: FIRSTNAME, LASTNAME, SURNAME_PREFIX, PRODUCT_NAME, PRODUCT_CATEGORY, MOBILE_NUMBER, FIXED_NUMBER, STATE, EXTENSION, SIM_CARD_NUMBER, IMEI. For example: FIRSTNAME: \"aab\", \"aac\"; LASTNAME: \"aba\", \"abb\""
        required: false
        type: string
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - FIRSTNAME
        - LASTNAME
        - SURNAME_PREFIX
        - PRODUCT_NAME
        - PRODUCT_CATEGORY
        - MOBILE_NUMBER
        - FIXED_NUMBER
        - STATE
        - SIM_CARD_NUMBER
        - EXTENSION
        - SIP_ACCOUNT_NAME
        - CATEGORY
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Contract_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/id/{id}:
    get:
      tags:
      - rest-contract-controller
      summary: Get contract details.
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li></ul>
      operationId: getContractUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContractDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/id/{id}/items:
    get:
      tags:
      - rest-contract-controller
      summary: Get all contract items (in form of tree) for given contract.
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li></ul>
      operationId: getContractItemsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContractItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/id/{id}/vamo/fixed-numbers:
    get:
      tags:
      - rest-contract-controller
      summary: Get all possible fixed numbers for combining operation.
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li></ul>
      operationId: getFixedNumbersForMergingUsingGET
      produces:
      - '*/*'
      parameters:
      - name: filters
        in: query
        description: "Possible columns: FIRSTNAME, LASTNAME, SURNAME_PREFIX, PRODUCT_NAME, PRODUCT_CATEGORY. MOBILE_NUMBER, STATE, EXTENSION, SIM_CARD_NUMBER. For example: FIRSTNAME: \"aab\", \"aac\"; LASTNAME: \"aba\", \"abb\""
        required: false
        type: string
      - name: from
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - FIRSTNAME
        - LASTNAME
        - SURNAME_PREFIX
        - PRODUCT_NAME
        - PRODUCT_CATEGORY
        - MOBILE_NUMBER
        - FIXED_NUMBER
        - STATE
        - SIM_CARD_NUMBER
        - EXTENSION
        - SIP_ACCOUNT_NAME
        - CATEGORY
      - name: to
        in: query
        required: false
        type: integer
        format: int32
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_ContractForOperation_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/id/{id}/vamo/mobile-numbers:
    get:
      tags:
      - rest-contract-controller
      summary: Get all possible mobile numbers for combining operation.
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li></ul>
      operationId: getMobileNumbersForMergingUsingGET
      produces:
      - '*/*'
      parameters:
      - name: filters
        in: query
        description: "Possible columns: FIRSTNAME, LASTNAME, SURNAME_PREFIX, PRODUCT_NAME, PRODUCT_CATEGORY, FIXED_NUMBER, STATE, EXTENSION, SIM_CARD_NUMBER. For example: FIRSTNAME: \"aab\", \"aac\"; LASTNAME: \"aba\", \"abb\""
        required: false
        type: string
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - FIRSTNAME
        - LASTNAME
        - SURNAME_PREFIX
        - PRODUCT_NAME
        - PRODUCT_CATEGORY
        - MOBILE_NUMBER
        - FIXED_NUMBER
        - STATE
        - SIM_CARD_NUMBER
        - EXTENSION
        - SIP_ACCOUNT_NAME
        - CATEGORY
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_ContractForOperation_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/overview:
    get:
      tags:
      - rest-contract-controller
      summary: Get number of contracts grouped by contract type.
      description: |-
        Return contracts statistics. Possible contract types (key values): mobile, fixed, fixed_mobile, hardware, other

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li><li>privileges_virtual_hierarchy_view</li><li>privileges_virtual_hierarchy_management</li></ul>
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int64
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds:
    get:
      tags:
      - rest-threshold-controller
      summary: Get list of thresholds
      description: |-
        Return list of thresholds for current user.

        <strong>Required privileges</strong> (one of the following):<ul><li>privileges_threshold_management</li><li>privileges_orders_authorization</li><li>privileges_un-authorized_orders_creation</li></ul>
      operationId: getThresholdsUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Threshold'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-threshold-controller
      summary: Create new threshold
      description: "Creates new threshold. Name must be unique in context of customer.\n\n<br>The request is validated. Possible validation errors: \n| HTTP code | Error code               | Description                                           |\n|-----------|--------------------------|-------------------------------------------------------|\n| `400`     | `VALUE_NOT_UNIQUE`       | `name` must be unique in context of customer          |\n\n<strong>Required privilege</strong>:<ul><li>privileges_threshold_management</li></ul>"
      operationId: createNewThresholdUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/ThresholdRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/availability:
    get:
      tags:
      - rest-threshold-controller
      summary: Check if user should have access to thresholds
      description: |-
        Return if user should have access to thresholds.

        <strong>Required privileges</strong> (one of the following):<ul><li>privileges_threshold_management</li><li>privileges_orders_authorization</li><li>privileges_un-authorized_orders_creation</li></ul>
      operationId: getThresholdsAvailabilityUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OperationAvailability1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/remove:
    post:
      tags:
      - rest-threshold-controller
      summary: Remove thresholds
      description: "If at least one item cannot be deleted, none of the items will be deleted.\n\n<br>The request is validated. Possible validation errors: \n| HTTP code | Error code                 | Description                                         |\n|-----------|----------------------------|-----------------------------------------------------|\n| `404`     | `REMOVING_BLOCKED`         | Cannot remove at least one of threshold             |\n| `404`     | `THRESHOLD_NOT_FOUND`      | Not an existing threshold was given in list         |\n<strong>Required privilege</strong>:<ul><li>privileges_threshold_management</li></ul>"
      operationId: removeThresholdUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/RemoveThresholdParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/{id}:
    get:
      tags:
      - rest-threshold-controller
      summary: Get threshold with information about operation availability
      description: "Returns a single threshold by `id` with additional information about possibility to modify and delete subscription.Accessible only if user has priviliges to perform these operations at all. \n\n<strong>Required privilege</strong>:<ul><li>privileges_threshold_management</li></ul>"
      operationId: getThresholdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ThresholdDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-threshold-controller
      summary: Modify existing threshold
      description: "Modifies existing threshold. Name must be unique in context of customer or the same as before.\n\n<br>The request is validated. Possible validation errors: \n| HTTP code | Error code                 | Description                                                          |\n|-----------|----------------------------|----------------------------------------------------------------------|\n| `400`     | `VALUE_NOT_UNIQUE  `       | `name` must be unique in context of customer or the same as before   |\n| `400`     | `TYPE_CHANGE_NOT_ALLOWED`  | For chosen threshold change of type is not allowed                   |\n| `404`     | `THRESHOLD_NOT_FOUND`      | Not exisiting threshold was selected                                 |\n\n<strong>Required privilege</strong>:<ul><li>privileges_threshold_management</li></ul>"
      operationId: updateThresholdUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/ThresholdRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/{id}/assign:
    post:
      tags:
      - rest-threshold-controller
      summary: Allows to assign list of contracts to given threshold
      description: "Assigne list of contracts to threshold.\n\nThe request is validated. Possible validation errors: \n\n| HTTP code | Error code                                | Description                                                      |\n|-----------|-------------------------------------------|------------------------------------------------------------------|\n| `400`     | `CONTRACTS_ALREADY_ASSIGNED_TO_GIVEN_TYPE`| At least one contract is already assigned to this threshold type |\n| `400`     | `NOT_VALID_PRODUCT_FOR_GIVEN_THRESHOLD`   | At least one contract has not valid product for this threshold   |\n| `403`     | `FORBIDDEN_FOR_USER`                      | Thresholds are not available for loggin in user                  |\n| `404`     | `CONTRACT_NOT_FOUND`                      | At least one contract is not visible for user or doesn't exist   |\n| `404`     | `THRESHOLD_NOT_FOUND`                     | Not exisiting threshold was selected                             |\n<strong>Required privileges</strong> (one of the following):<ul><li>privileges_threshold_management</li><li>privileges_orders_authorization</li><li>privileges_un-authorized_orders_creation</li></ul>"
      operationId: assignContractsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/AssignContractsToThresholdRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/{id}/unassign:
    post:
      tags:
      - rest-threshold-controller
      summary: Allows to unassign contracts from given threshold
      description: "Unassigns the given list of contracts from the given threshold.\n<br>The request is validated. Possible validation errors: \n| HTTP code | Error code                 | Description                                                                             |\n|-----------|----------------------------|-----------------------------------------------------------------------------------------|\n| `403`     | `FORBIDDEN_FOR_USER`       | Thresholds are not available for loggin in user                                         |\n| `404`     | `THRESHOLD_NOT_FOUND`      | Threshold with the given `id` was not found                                             |\n| `404`     | `CONTRACT_NOT_FOUND`       | At least one of the given contracts does not exists or is not assigned to the threshold |\n<strong>Required privileges</strong> (one of the following):<ul><li>privileges_threshold_management</li><li>privileges_orders_authorization</li><li>privileges_un-authorized_orders_creation</li></ul>"
      operationId: unassignContractsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: params
        required: true
        schema:
          $ref: '#/definitions/UnassignContractsFromThresholdRequestParams'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/{thresholdId}/contracts:
    get:
      tags:
      - rest-threshold-controller
      summary: Get contracts assigned to threshold
      description: "Possible validation errors: \n| HTTP code | Error code                 | Description                                        |\n|-----------|----------------------------|----------------------------------------------------|\n| `404`     | `THRESHOLD_NOT_FOUND`      | Not an existing threshold was given in list        |\n| `403`     | `FORBIDDEN_FOR_USER`       | Operation not allowed for current user             |\n\n<strong>Required privileges</strong> (one of the following):<ul><li>privileges_threshold_management</li><li>privileges_orders_authorization</li><li>privileges_un-authorized_orders_creation</li></ul>"
      operationId: getContractsUsingGET_1
      produces:
      - '*/*'
      parameters:
      - name: Content-Language
        in: header
        description: Content-Language
        required: false
        type: string
      - name: category
        in: query
        required: false
        type: string
        enum:
        - MOBILE
        - FIXED
        - FIXED_MOBILE
        - HARDWARE
        - SKYPE_FOR_BUSINESS
        - SOFTWARE
        - OTHER
      - name: filters
        in: query
        description: "Possible columns: FIRSTNAME, LASTNAME, SURNAME_PREFIX, PRODUCT_NAME, PRODUCT_CATEGORY, MOBILE_NUMBER, FIXED_NUMBER, STATE, EXTENSION, SIM_CARD_NUMBER, IMEI. For example: FIRSTNAME: \"aab\", \"aac\"; LASTNAME: \"aba\", \"abb\""
        required: false
        type: string
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - FIRSTNAME
        - LASTNAME
        - SURNAME_PREFIX
        - PRODUCT_NAME
        - PRODUCT_CATEGORY
        - MOBILE_NUMBER
        - FIXED_NUMBER
        - STATE
        - SIM_CARD_NUMBER
        - EXTENSION
        - SIP_ACCOUNT_NAME
        - CATEGORY
      - name: thresholdId
        in: path
        description: thresholdId
        required: true
        type: integer
        format: int64
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Contract_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contract/thresholds/{thresholdId}/contracts-to-assign:
    get:
      tags:
      - rest-threshold-controller
      summary: Get a list of contracts which can be later assigned to given threshold.
      description: "Possible validation errors: \n| HTTP code | Error code                 | Description                                         |\n|-----------|----------------------------|-----------------------------------------------------|\n| `403`     | `FORBIDDEN_FOR_USER`       | Operation not allowed for current user              |\n| `404`     | `THRESHOLD_NOT_FOUND`      | Given threshold can not be found                    |\n\n<strong>Required privileges</strong> (one of the following):<ul><li>privileges_threshold_management</li><li>privileges_orders_authorization</li><li>privileges_un-authorized_orders_creation</li></ul>"
      operationId: getContractsToAssignUsingGET
      produces:
      - '*/*'
      parameters:
      - name: Content-Language
        in: header
        description: Content-Language
        required: false
        type: string
      - name: category
        in: query
        required: false
        type: string
        enum:
        - MOBILE
        - FIXED
        - FIXED_MOBILE
        - HARDWARE
        - SKYPE_FOR_BUSINESS
        - SOFTWARE
        - OTHER
      - name: filters
        in: query
        description: "Possible columns: FIRSTNAME, LASTNAME, SURNAME_PREFIX, PRODUCT_NAME, PRODUCT_CATEGORY, MOBILE_NUMBER, FIXED_NUMBER, STATE, EXTENSION, SIM_CARD_NUMBER, IMEI. For example: FIRSTNAME: \"aab\", \"aac\"; LASTNAME: \"aba\", \"abb\""
        required: false
        type: string
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - FIRSTNAME
        - LASTNAME
        - SURNAME_PREFIX
        - PRODUCT_NAME
        - PRODUCT_CATEGORY
        - MOBILE_NUMBER
        - FIXED_NUMBER
        - STATE
        - SIM_CARD_NUMBER
        - EXTENSION
        - SIP_ACCOUNT_NAME
        - CATEGORY
      - name: thresholdId
        in: path
        description: thresholdId
        required: true
        type: integer
        format: int64
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Contract_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket:
    get:
      tags:
      - rest-contracting-controller
      summary: Get basket content with products tree and prices
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getBasketUsingGET
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BasketSnapshot'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
      - rest-contracting-controller
      summary: Modify state of current basket
      description: "<div style='max-height: 400px; overflow: auto; width: 100%'>This is a central enpoint for contracting or modifing products. Depending on `change` object passed to this method you can initialize basket, mark product to be contracted, mark product to be terminated, set some parameter for contracting process and so on. Below you will find example scenarios of using basket. \n\n# Modify contract\n\n1. Find contract to modify using: `GET /contract/all`\n2. Check if contract modification is possible for selected contract using:  `GET /order/operations`. Check flags for `modify` in response   (`visible` and `enabled` are set to true).\n3. Initialize basket using selected contract: `POST /contracting/basket`\n   ```\n   {\n       \"contractId\": [id of contract to be modified]\n   }\n   ```\n4. Get basket content (including products tree): `GET /contracting/basket`\n5. Now you can select and deselect products (you can send more than one - every change will be proceeded one after another) using: `POST /contracting/basket`\n   ```\n   {\n     \"productActions\": [{\n       \"productId\": [id field from tree],\n       \"amount\": [optional number of products to be put - important only for PUT action, min 1, max 100, default 1],\n       \"type\": [\"PUT\" | \"REMOVE\"]\n     }]\n   }\n   ```\n   Sending multiply changes should be used mainly if you are sure all changes can be applied (i.e. one action won't exclude following ones). \n   Step 4 and 5 can be repeated multiply times.\n6. You can create order with introduced changes via `POST /contracting/basket/order`\n   ```\n   {\n     \"referenceNumber\": [reference number],\n     \"wishDate\": [date when the order is going to be started]\n   }\n   ```\n\n# Create new contract\n\n1. Find subscriber for whom you want to create new contract, e.g. `GET /hierarchy/subscribers`\n2. Initialize basket using selected account (subscriber): `POST /contracting/basket`\n   ```\n   {\n     \"accountGroupId\": [subscriber id found in previous step]\n   }\n   ```\n3. Get basket content (including products tree): `GET /contracting/basket`\n4. Select and deselect products - in the same way as during contract modification\n5. Right now you can fill in some characteristic values. Characteristics are all values which are needed to fully configured\n   the future contract. The set of characteristics depends on previously selected products (for example you will receive\n   different values for mobile subscription and for fixed one). What is more, it is possible that setting some characteristics\n   can enable another ones. So after every such action you should check basket content. Let's assume you've selected in the previous\n   step `IP Centrex`. In such situation you will get in your basket something like this:\n   ```\n   (...)\n     \"characteristics\": {\n       \"firstName\": {\n         \"name\": \"firstName\",\n         \"value\": \"Jan\",\n         \"possibleValues\": [{\"value\": \"Jan\"}]\n       },\n       \"lastName\": {\n         \"name\": \"lastName\",\n         \"value\": \"Kowalski\",\n         \"possibleValues\": [{\"value\": \"Kowalski\"}]\n       },\n       \"loginExtension\": {\n         \"name\": \"loginExtension\"\n       },\n       \"loginExtensionPrefix\": {\n         \"name\": \"loginExtensionPrefix\",\n         \"value\": \"\",\n         \"possibleValues\": [{\"value\": \"\"}]\n       },\n       \"deviceOption\": {\n         \"name\": \"deviceOption\",\n         \"possibleValues\": [\n           {\n             \"value\": \"Off-The-Shelf\",\n             \"caption\": {\"en\": \"Off-The-Shelf\", \"nl\": \"Off-The-Shelf\"}\n           },\n           {\n             \"value\": \"Deviceless\",\n             \"caption\": {\"en\": \"Deviceless\", \"nl\": \"Deviceless\"}\n           },\n           {\n             \"value\": \"Existing Shared\",\n             \"caption\": {\"en\": \"Existing Shared\", \"nl\": \"Existing Shared\"}\n           }\n         ]\n       },\n       \"fixedNumber\": {\n         \"name\": \"fixedNumber\"\n       },\n       \"email\": {\n         \"name\": \"email\",\n         \"value\": \"jan.kowalski@comarch.com\",\n         \"possibleValues\": [{\"value\": \"jan.kowalski@comarch.com\"}]\n       },\n       \"group\": {\n         \"name\": \"group\",\n         \"possibleValues\": [\n           {\n             \"value\": \"166715563\",\n             \"caption\": {\"en\": \"Codemaster Group 1\", \"nl\": \"Codemaster Group 1\"}\n           },\n           {\n             \"value\": \"166715564\",\n             \"caption\": {\"en\": \"Codemaster Group 2\", \"nl\": \"Codemaster Group 2\"}\n           }\n         ]\n       }\n     }\n   (...)\n   ```\n   Some of these characteristics are read-only as they have only one possible value which is prefilled and can't be changed    to anything else (for example `firstName`, `lastName`). They are included in the response for informational purpose    and can be presented on a front-end. The rest of characteristics should be entered:\n   * `loginExtension`,\n   * `deviceOption`,\n   * `fixedNumber`,\n   * `group`.\n   Setting characteristic value is done through the same `POST /contracting/basket` endpoint, but now we are going to use `characteristicActions` key, for example:\n   ```\n   {\n     \"characteristicActions\": [{\n       \"name\": \"deviceOption\",\n       \"value\": \"Off-The-Shelf\"\n     }]\n   }\n   ```\n   After `deviceOption` is set to `Off-The-Shelf` you will receive additionally `deviceType` characteristic to set.\n   Theoretically, you can merge many characteristic requests into one request by passing a list of actions instead   of single one. But please be aware, that in such case they are proceeded sequentially one-by-one, so their order   may be important (for example you need set ` deviceOption` characteristic before `deviceType`). Or you can just    make separated request for each individual value. It's up to you.\n   The process of consulting basket content and setting characteristics value should be repeated until all required values are set.6. Next, if you decide to give a new sim card (possible only when you haven't ordered a new one), you should `POST /basket` the following object:\n   ```\n   {\"simCardNumber\": <short uiccid>}\n   ```\n7. You can create order with introduced changes via `POST /contracting/basket/order`\n   ```\n   {\n     \"referenceNumber\": [reference number],\n     \"wishDate\": [date when the order is going to be started]\n   }\n   ```\n   Please note that if you selected some order you have to extend this object with address section.\n\n# Create new contract (by template)\n\n1. Find subscriber for whom you want to create new contract, e.g. `GET /hierarchy/subscribers`\n2. Initialize basket using selected account (subscriber): `POST /contracting/basket`\n   ```\n   {\n     \"accountGroupId\": [subscriber id found in previous step]\n   }\n   ```\n3. From now you can get template list using `GET /contracing/basket/templates`\n4. You can use one of those templates (select it) using `POST /contracting/basket`:\n   ```\n   {\n     \"templateId\": [template id]\n   }\n   ```\n5. Get basket content (including products tree): `GET /contracting/basket`\n\nThe rest of steps is analogous to standard way of creating contract.\n\n# Reactivate contract\n\n1. Find subscriber for whom you want to create new contract, e.g. `GET /hierarchy/subscribers`\n2. Find service request in which contract was terminated, e.g. `GET /track-and-trace/service-requests`\n3. Initialize basket using selected account (subscriber) and contract: `POST /contracting/basket`\n   ```\n   {\n     \"accountGroupId\": [subscriber id found in previous step],\n     \"orderId\": [termination order id found in previous step]\n   }\n   ```\n4. A read-only characteristic `previousPhoneNumber` is initialized. You can use it to get the previous phone number and present it to an end user.\n\nThe rest of steps is analogous to standard way of creating contract.\n\n# Port in number\n\nInitials steps are the same as for creating a new contract. After configuring products tree (by hand or by template) you should be able to set porting characteristics. Please note that this characteristic will be only available if you select mobile product. You can check possible list of characteristics to be set using: `GET /basket` or `GET /basket/characteristics`. Example response after selecting mobile product (fragment of `GET /basket` response):\n\n```\n(...)\n\n  \"characteristics\": {\n    \"porting\": {\n      \"name\": \"porting\",\n      \"value\": \"false\",\n      \"possibleValues\": [\n        {\n          \"value\": \"false\",\n          \"caption\": {\n            \"en\": \"false\",\n            \"nl\": \"false\"\n          }\n        },\n        {\n          \"value\": \"true\",\n          \"caption\": {\n            \"en\": \"true\",\n            \"nl\": \"true\"\n          }\n        }\n      ]\n    }\n  }\n\n(...)\n```\n\nThe response says that:\n  * you can set `porting` characteristic (field `name`),\n  * current value is `false` (field `value`),\n  * it can take one of two values: `true` or `false` (field `possibleValues`).\n\nTo switch porting value to `true`, you have to make the following request:\n\n```\n{\n  \"characteristicActions\": [{\n    \"name\": \"porting\",\n    \"value\": \"true\"\n  }]\n}\n```\n\nAfter setting porting to `true` there will be possibility to set few more porting-specific parameters (you can get new list of characteristics again using `GET /basket`):\n  * `phoneNumber` - required, regex: `316\\d{8} | 3197\\d{9}`\n  * `customerNumber` - required, length <= 70\n  * `customerName`, lenght <= 20\n  * `keepExistingSimCard` - default `false`\n  * `note` - length <= 60\n\nTheoretically, you can merge characteristic requests into one request by passing a list of actions instead of single action. But please be aware, that in such case they are proceeded sequentially one-by-one, so their order may be important (for example you need set `porting` characteristic before `phoneNumber`). Or you can just make separated request for each individual value. It's up to you.\n\nTurning on `porting` flag additionally disable possibility to get more main products and contract additional main products such as handsets, sim cards etc. During porting contracting such products is not possible.\n\nIf sent characteristic value does not met validation criteria an error is raised (`400 Bad Request`) with possible code values:\n  * `INVALID_CUSTOMER_NAME`,\n  * `INVALID_CUSTOMER_NUMBER`,\n  * `INVALID_NOTE`,\n  * `BASKET_INVALID`,\n  * `INVALID_MSISDN_ALREADY_EXISTS_FOR_A_CUSTOMER`,\n  * `INVALID_MSISDN_IS_BLOCKED`,\n  * `INVALID_MSISDN_FORMAT_NOT_VALID`,\n  * `INVALID_MSISDN_LENGTH_FOR_THIS_PRODUCT`,\n  * `INVALID_MSISDN_FOR_CUSTOMER_OFFER`,\n\nNext, if you decide to give a new sim card (possible only when `keepExistingSimCard` = `false`), you should `POST /basket` the following object:\n\n```\n{\n  \"simCardNumber\": <short uiccid>\n}\n```\n\nto pass short UICCD of ported number.\n\nKeeping existing sim card is only possible for phone number registered currently in KPN (internal porting).\n\nStart a new order is possible via 'POST /basket/order'. You can pass:\n  * `wishDate` - preferred date of porting (null is treated as ASAP),\n  * `referenceNumber`.\n\nWe do not pass address to backend.\n\nPossible error codes (for `400 Bad Request` response):\n  * `BASKET_INVALID` - not all parameters have been set, or product tree is in error state,\n  * `INVALID_WISH_DATE` - as wish date should be <= current date + 90, and can not be set on holiday.\n\n# Combine fixed and mobile contract\n\n1. Find first contract to combine using: `GET /contract/all`\n2. Check if contract combination is possible for selected contract using:  `GET /order/operations`. Check flags for `combineFixedMobile` in response   (`visible` and `enabled` are set to true).\n3. Depending on previous contract type find second contract using `GET /contracting/id/{id}/vamo/fixed-numbers` or `GET /contracting/id/{id}/vamo/mobile-numbers`\n4. Initialize basket using selected contracts: `POST /contracting/basket`\n   ```\n   {\n       \"fixedContractId\": [id of fixed contract],\n       \"mobileContractId\": [id of mobile contract],\n   }\n   ```\n5. Get list of possible characterists to bet set (for example pbx groups, service types, combine types). The response contains also current value    of every characteristics: `GET /contracting/basket/characteristics\n6. Set selected characteristics using modify basket (you can send more than one - every change will be proceeded one after another)\n   ```\n   {\n     \"characteristicActions\": [{\n       \"name\": [characteristic name],\n       \"value\": [characteristic value]\n     }]\n   }\n   Step 5 and 6 can be repeated multiply times.\n7. Get products tree: `GET /contracting/basket/products`\n\nThe rest of steps are still not implemented.\n# Modify existing template\n1. Find valid template to modify using: `GET /contracting/templates`\n2. Initialize basket using selected template: `POST /contracting/basket`\n   ```\n   {\n       \"templatedIdToModify\": [id of template to be modified]\n   }\n   ```\n3. You can preview and modify basket state the same way as during create new subscrition or dduring contract modification\n4. When the basket is in valid state you can save all change using `POST /contracting/basket/modify-template`\n</div>\n\n<strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>"
      operationId: modifyBasketUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: change
        description: change
        required: true
        schema:
          $ref: '#/definitions/BasketChange'
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            additionalProperties:
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/characteristics:
    get:
      tags:
      - rest-contracting-controller
      summary: Get characteristics grouped by its names
      description: |-
        Example characteristics names: `pbxGroup`, `serviceType`, `combineType`

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getCharacteristicsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Characteristic'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/main-products:
    get:
      tags:
      - rest-contracting-controller
      summary: Get list of main products to order
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getMainProductsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: Content-Language
        in: header
        description: Content-Language
        required: false
        type: string
      - name: category
        in: query
        required: false
        type: string
      - name: filters
        in: query
        description: "Possible columns: PRODUCT_NAME, PRICE_IN_CENTS, PRIVATE_COPYING_LEVY_IN_CENTS. For example: STATUS: \"a\", \"b\"; PRICE_IN_CENTS: \"1\", \"2\""
        required: false
        type: string
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: order
        in: query
        required: false
        type: string
        enum:
        - ASC
        - DESC
      - name: patterns
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      - name: sortBy
        in: query
        required: false
        type: string
        enum:
        - PRODUCT_NAME
        - CATEGORY
        - FOLDER_NAME
        - PRICE_IN_CENTS
        - PRIVATE_COPYING_LEVY_IN_CENTS
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Product_1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/modify-template:
    post:
      tags:
      - rest-contracting-controller
      summary: Modify template
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul><strong>and</strong>:</strong><ul><li>privileges_portfolio_and_profiles_management</li></ul>
      operationId: modifyTemplateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      - name: spectatedUserId
        in: query
        description: spectatedUserId
        required: false
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/order:
    post:
      tags:
      - rest-contracting-controller
      summary: Create order applying changes introduced to basket staring from initializing
      description: |-
        Possible errors:
        | HTTP code                          | Error code          | Description                                              |
        |------------------------------------|---------------------|----------------------------------------------------------|
        | `ORDERING_IS_BLOCKED_FOR_CUSTOMER` | `403`               | Current customer is frozen and can not order anything    |
        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: orderUsingPOST_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/OrderRequest'
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderConfirmation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/products:
    get:
      tags:
      - rest-contracting-controller
      summary: Get products tree
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getProductsTreeUsingGET
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductTreeItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/reset:
    post:
      tags:
      - rest-contracting-controller
      summary: Reset basket
      description: |-
        Some of the methods are stateful and depend on basket state. Due to this it is sometimes helpful to reinitialize basket.

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: resetBasketUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/resources:
    get:
      tags:
      - rest-contracting-controller
      summary: Get resources
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getResourcesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: limit
        in: query
        description: limit
        required: false
        type: integer
        format: int32
      - name: prefix
        in: query
        description: prefix
        required: true
        type: string
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Resource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/save-as-template:
    post:
      tags:
      - rest-contracting-controller
      summary: Save as template
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul><strong>and</strong>:</strong><ul><li>privileges_portfolio_and_profiles_management</li></ul>
      operationId: saveAsTemplateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/SaveAsTemplateRequest'
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SaveAsTemplateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/basket/templates:
    get:
      tags:
      - rest-contracting-controller
      summary: Get templates
      description: |-
        List of templates can be limited by main product category (if null given all templates will be returned).

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getTemplatesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: from
        in: query
        description: Pagination parameter - start from (included). The elements are counted from 0. Default value is 0.
        required: false
        type: integer
        format: int32
        x-example: 0
      - name: mainProductCategory
        in: query
        required: false
        type: string
        enum:
        - HARDWARE
        - FIXED
        - MOBILE
        - SOFTWARE
        - FIXED_MOBILE
        - SKYPE_FOR_BUSINESS
        - CENTREX
        - OTHER
      - name: pattern
        in: query
        required: false
        type: string
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      - name: to
        in: query
        description: Pagination parameter - end element (exluded). Default value is 20.
        required: false
        type: integer
        format: int32
        x-example: 20
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PagedResult_Template_'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/bvm/availability:
    get:
      tags:
      - rest-business-voice-mail-controller
      summary: Business voicemail availability
      description: |-
        Check if business voicemail service is availabe for current user.

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getAvailabilityUsingGET
      produces:
      - '*/*'
      parameters: []
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OperationAvailability'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/bvm/order:
    post:
      tags:
      - rest-business-voice-mail-controller
      summary: Order Business voicemail
      description: |-
        Order business voicemail. Subscriptions file validations:

        | FILE ERROR CODE                    | CODE  | DESCRIPTION                                                                     |    ERRORS                           |
        |------------------------------------|-------|-------------------------------------------------------------------------------  |-------------------------------------|
        | `INVALID_BVM_FILE`                 | `400` | The file does not contain the .csv extension or it's binary content is not .csv |                                     |
        | `WRONG_COLUMN_SEPARATOR`           | `400` | Wrong column separator. Required is `;` character.                              |                                     |
        | `MISSING_HEADER_IN_FILE`           | `400` | At least one of headers was not found in the file (`mobiel nummer`, `voornaam`,                                                `voornaam fonetisch`, `achternaam`, `achternaam fonetisch`, `geslacht`)         | List of missing headers             |
        | `RECORDS_NOT_VALID_IN_FILE`        | `400` | At least one of fields was not correct. Required fields are `mobiel nummer`,                                                `voornaam`, `achternaam`, `geslacht`. Field `mobiel nummer` needs to                                                match pattern: 316[0-9]{8} and  `geslacht` needs to be `M` or `V`.              | List of incorrect rows              |
        | `PHONE_NUMBERS_NOT_UNIQUE`         | `400` | Given list of phone numbers was given multiple times.                           | List if incorrect phone numbers     |
        | `SUBSCRIPTIONS_NOT_FOUND`          | `400` | Not all given numbers are contracted for customer.                              |                                     |
        | `MAXIMUM_AMOUNT_OF_ROWS_EXCEEDED`  | `400` | Maximum rows size (2000) exceeded.                                              |                                     |
        | `KGG_NUMBERS_NOT_EQUAL`            | `400` | Not all contracts have the same KGG number                                                `These numbers are set for customers and debtors.                                               `Ordes should usually be filled for a single debtor.                            |                                     |
        | `ORDERING_IS_BLOCKED_FOR_CUSTOMER` | `403` | Current customer is frozen and can not order anything                           |                                     |
        |                                    | `413` | Request entity too large. Max file size is 128KB                                |                                     |

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: orderUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - '*/*'
      parameters:
      - name: companyName
        in: query
        required: true
        type: string
      - name: companyNamePronunciation
        in: query
        required: true
        type: string
      - name: customerReferenceNumber
        in: query
        required: false
        type: string
      - name: subscriptionsFile
        in: formData
        description: subscriptionsFile
        required: true
        type: file
      - name: voiceLanguage
        in: query
        required: true
        type: string
        enum:
        - EN
        - NL
      - name: voiceMailMessage
        in: query
        required: true
        type: string
      - name: wishDate
        in: query
        required: false
        type: string
        format: date-time
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/categories:
    get:
      tags:
      - rest-contracting-controller
      summary: Get available product categories to be contracted for currently logged user
      description: |-
        Possible values: mobile, fixed, hardware, other, software, skype_for_business, fixed_mobile, centrex

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getAvailableCategoriesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/hardware/categories:
    get:
      tags:
      - rest-contracting-controller
      summary: Get available hardware categories
      description: |-
        Possible values: `handsets`, `additional mobile hardware`, `sim cards`

        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: getHardwareCategoriesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: sessionId
        in: query
        description: sessionId
        required: false
        type: string
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/separate-fixed-mobile:
    post:
      tags:
      - rest-separate-fixed-mobile-controller
      summary: Separate fixed-mobile subscription
      description: |-
        Possible errors:
        | HTTP code                          | Error code          | Description                                              |
        |------------------------------------|---------------------|----------------------------------------------------------|
        | `ORDERING_IS_BLOCKED_FOR_CUSTOMER` | `403`               | Current customer is frozen and can not order anything    |
        <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_un-authorized_orders_creation</li><li>privileges_orders_authorization</li></ul>
      operationId: separateFixedMobileUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/SeparateFixedMobileRequest'
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OrderConfirmation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/templates:
    get:
      tags:
      - rest-template-controller
      summary: Get template overview
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_portfolio_and_profiles_management</li></ul>
      produces:
      - '*/*'
      parameters:
      - name: groupId
        in: query
        description: groupId
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TemplateOverview'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/templates/{id}:
    get:
      tags:
      - rest-template-controller
      summary: Get template details
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_portfolio_and_profiles_management</li></ul>
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TemplateDetailsWithLocations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contracting/templates/{id}/delete:
    post:
      tags:
      - rest-template-controller
      summary: Remove template
      description: <strong>Required privileges</strong> (one of the following):</strong><ul><li>privileges_portfolio_and_profiles_management</li></ul>
      operationId: deleteTemplateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      security:
      - OAuth2: []
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
securityDefinitions:
  OAuth2:
    type: oauth2
    tokenUrl: https://api-prd.kpn.com/oauth/grip/msm/accesstoken?grant_type=client_credentials
    flow: application
definitions:
  ErrorResponse:
    type: object
    properties:
      transactionId:
        type: string
        description: transaction id of the the request
        title: Transaction ID
      status:
        type: string
        description: Status
        title: Status
      name:
        type: string
        description: Error name
        title: Error name
      message:
        type: string
        description: Error message
        title: Error message
      info:
        type: string
        description: Additional information about error
        title: Info
  Address:
    type: object
    properties:
      attention:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      floor:
        type: string
      houseNumber:
        type: string
      location:
        type: string
      postalCode:
        type: string
      provinceOrState:
        type: string
      room:
        type: string
      street:
        type: string
    title: Address
  Attachment:
    type: object
    properties:
      fileName:
        type: string
      id:
        type: integer
        format: int64
    title: Attachment
  ChangePortingData:
    type: object
    properties:
      asap:
        type: boolean
      customerNumber:
        type: string
      newWishDate:
        type: string
        format: date-time
    title: ChangePortingData
  ContractItem:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/ContractItem'
      citemBsId:
        type: integer
        format: int64
      contractId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/LocalizedString'
      productBsId:
        type: integer
        format: int64
      tariffPlanVariantBsId:
        type: integer
        format: int64
    title: ContractItem
  ContractServiceUpdate:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/ContractServiceUpdate'
      name:
        $ref: '#/definitions/LocalizedString'
      newState:
        type: string
        enum:
        - "ON"
        - "OFF"
      oldState:
        type: string
        enum:
        - "ON"
        - "OFF"
    title: ContractServiceUpdate
  ContractingSuborder:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/ContractingSuborder'
      expectedDeliveryDate:
        type: string
      id:
        type: string
      imeiNumbers:
        type: array
        items:
          type: string
      mobileNumbers:
        type: array
        items:
          type: string
      multiplicity:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/LocalizedString'
      oneTimePriceInCents:
        type: integer
        format: int64
      privateCopyingLevyInCents:
        type: integer
        format: int64
      productName:
        type: string
      serialNumbers:
        type: array
        items:
          type: string
      status:
        type: string
    title: ContractingSuborder
  FixedNumberPresentation:
    type: object
    properties:
      description:
        type: string
        enum:
        - ORGANISATION
        - FIXED_NUMBER
        - HUNTGROUP
        - CALL_CENTER
      number:
        type: string
    title: FixedNumberPresentation
  FlexibleNumberPresentation:
    type: object
    properties:
      defaultNumber:
        type: string
      fixedNumbers:
        type: array
        items:
          $ref: '#/definitions/FixedNumberPresentation'
      mobileNumberPresentation:
        type: boolean
    title: FlexibleNumberPresentation
  Hardware:
    type: object
    properties:
      apple:
        type: boolean
      contractItem:
        $ref: '#/definitions/ContractItem'
      imei:
        type: string
      product:
        $ref: '#/definitions/Product'
      returned:
        type: boolean
      samsung:
        type: boolean
      serialNumber:
        type: string
    title: Hardware
  HardwareSuborder:
    type: object
    properties:
      imeiNumber:
        type: string
      name:
        $ref: '#/definitions/LocalizedString'
      priceInCents:
        type: integer
        format: int64
      serialNumber:
        type: string
    title: HardwareSuborder
  LocalizedString:
    type: object
    properties:
      en:
        type: string
        description: English version
      nl:
        type: string
        description: Dutch version
    title: LocalizedString
    description: Text with two language versions
  OperationAvailability:
    type: object
    properties:
      blockingOrders:
        type: array
        items:
          $ref: '#/definitions/BlockingOrder'
      enabled:
        type: boolean
      visible:
        type: boolean
    title: OperationAvailability
  Order:
    type: object
    properties:
      contractItems:
        type: array
        items:
          $ref: '#/definitions/ContractItem'
      creationDate:
        type: string
      customerReference:
        type: string
      finishDate:
        type: string
      id:
        type: integer
        format: int64
      isBeingCanceled:
        type: boolean
      kpnReference:
        type: string
      msisdn:
        type: string
      orderedBy:
        $ref: '#/definitions/OrderParticipant'
      orderedFor:
        $ref: '#/definitions/OrderReceiver'
      portingMessage:
        type: string
      requiredAction:
        type: string
        enum:
        - AUTHORIZATION
        - PORT_IN_DATA_CHANGE
      status:
        type: string
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
      type:
        $ref: '#/definitions/LocalizedString'
    title: Order
  OrderAuthorizer:
    type: object
    properties:
      accountName:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      prefix:
        type: string
      spectatedBy:
        type: string
    title: OrderAuthorizer
  OrderCancelStatus:
    type: object
    properties:
      enabled:
        type: boolean
      visible:
        type: boolean
    title: OrderCancelStatus
  OrderDetails1:
    type: object
    properties:
      appleDepEnrollment:
        $ref: '#/definitions/OperationAvailability2'
      appleDepId:
        type: string
      attributes:
        type: object
        properties: {}
      cancelOrder:
        $ref: '#/definitions/OrderCancelStatus1'
      changePortingData:
        $ref: '#/definitions/OperationAvailability2'
      changeWishDate:
        $ref: '#/definitions/OperationAvailability2'
      contextAccountId:
        type: integer
        format: int64
      contextCustomerId:
        type: integer
        format: int64
      creationDate:
        type: string
        format: date-time
      customerReference:
        type: string
      deliveryAddress:
        $ref: '#/definitions/Address1'
      deliveryId:
        type: string
      eSimConfirmationCode:
        type: string
      eSimEmail:
        type: string
      eid:
        type: integer
        format: int64
      finishDate:
        type: string
        format: date-time
      firstPossibleWishDate:
        type: string
        format: date-time
      flexibleNumberPresentation:
        $ref: '#/definitions/FlexibleNumberPresentation1'
      id:
        type: integer
        format: int64
      invoiceAddress:
        $ref: '#/definitions/Address2'
      items:
        type: array
        items:
          $ref: '#/definitions/ContractingSuborder1'
      kpnReference:
        type: string
      msisdn:
        type: string
      oneTimeCostInCents:
        type: integer
        format: int32
      personsInvolved:
        $ref: '#/definitions/OrderParticipants1'
      portingCustomerNumber:
        type: string
      portingMessage:
        type: string
      recurringCostInCents:
        type: integer
        format: int32
      registeredForAppleDep:
        type: boolean
      registeredForSamsungKnox:
        type: boolean
      requiredAction:
        type: string
        enum:
        - AUTHORIZATION
        - PORT_IN_DATA_CHANGE
      returnHardware:
        $ref: '#/definitions/OperationAvailability2'
      samsungKnoxEnrollment:
        $ref: '#/definitions/OperationAvailability2'
      samsungKnoxId:
        type: string
      sim:
        type: string
      startDate:
        type: string
        format: date-time
      status:
        type: string
        enum:
        - CANCELED
        - CLOSED
        - DRAFT
        - HOLD_CUSTOMER
        - IN_PROGRESS
        - NEW
        - REJECTED
        - THIRD_PARTY
        - UNAUTHORIZED
        - WAITING
      thresholds:
        type: object
        description: "Possible keys: VOICE_NATIONAL_MIN, VOICE_ROAMING_EUR, DATA_NATIONAL_MB, DATA_ROAMING_MB"
        additionalProperties:
          $ref: '#/definitions/Threshold1'
      type:
        $ref: '#/definitions/LocalizedString1'
      wishDate:
        type: string
        format: date-time
    title: OrderDetails1
  OperationAvailability2:
    type: object
    properties:
      enabled:
        type: boolean
      visible:
        type: boolean
    title: OperationAvailability2
  OrderCancelStatus1:
    type: object
    properties:
      enabled:
        type: boolean
      visible:
        type: boolean
    title: OrderCancelStatus1
  Address1:
    type: object
    properties:
      attention:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      floor:
        type: string
      houseNumber:
        type: string
      location:
        type: string
      postalCode:
        type: string
      provinceOrState:
        type: string
      room:
        type: string
      street:
        type: string
    title: Address1
  FlexibleNumberPresentation1:
    type: object
    properties:
      defaultNumber:
        type: string
      fixedNumbers:
        type: array
        items:
          $ref: '#/definitions/FixedNumberPresentation'
      mobileNumberPresentation:
        type: boolean
    title: FlexibleNumberPresentation1
  Address2:
    type: object
    properties:
      attention:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      floor:
        type: string
      houseNumber:
        type: string
      location:
        type: string
      postalCode:
        type: string
      provinceOrState:
        type: string
      room:
        type: string
      street:
        type: string
    title: Address2
  ContractingSuborder1:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/ContractingSuborder'
      expectedDeliveryDate:
        type: string
      id:
        type: string
      imeiNumbers:
        type: array
        items:
          type: string
      mobileNumbers:
        type: array
        items:
          type: string
      multiplicity:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/LocalizedString'
      oneTimePriceInCents:
        type: integer
        format: int64
      privateCopyingLevyInCents:
        type: integer
        format: int64
      productName:
        type: string
      serialNumbers:
        type: array
        items:
          type: string
      status:
        type: string
    title: ContractingSuborder1
  OrderParticipants1:
    type: object
    properties:
      approvedBy:
        $ref: '#/definitions/OrderAuthorizer1'
      orderedBy:
        $ref: '#/definitions/OrderParticipant1'
      receivedBy:
        $ref: '#/definitions/OrderReceiver1'
    title: OrderParticipants1
  OrderAuthorizer1:
    type: object
    properties:
      accountName:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      prefix:
        type: string
      spectatedBy:
        type: string
    title: OrderAuthorizer1
  OrderParticipant1:
    type: object
    properties:
      accountName:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      prefix:
        type: string
    title: OrderParticipant1
  OrderReceiver1:
    type: object
    properties:
      accountName:
        type: string
      companyName:
        type: string
      employeeNumber:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      prefix:
        type: string
    title: OrderReceiver1
  Threshold1:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Threshold1
  LocalizedString1:
    type: object
    properties:
      en:
        type: string
        description: English version
      nl:
        type: string
        description: Dutch version
    title: LocalizedString1
    description: Text with two language versions
  OrderParticipant:
    type: object
    properties:
      accountName:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      prefix:
        type: string
    title: OrderParticipant
  OrderParticipants:
    type: object
    properties:
      approvedBy:
        $ref: '#/definitions/OrderAuthorizer'
      orderedBy:
        $ref: '#/definitions/OrderParticipant'
      receivedBy:
        $ref: '#/definitions/OrderReceiver'
    title: OrderParticipants
  OrderReceiver:
    type: object
    properties:
      accountName:
        type: string
      companyName:
        type: string
      employeeNumber:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      prefix:
        type: string
    title: OrderReceiver
  PagedResult_Order_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Order'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Order_
    description: Paged list of elements
  PagedResult_ReturnedHardwareServiceRequests_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/ReturnedHardwareServiceRequests'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_ReturnedHardwareServiceRequests_
    description: Paged list of elements
  PagedResult_ServiceRequest_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/ServiceRequest'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_ServiceRequest_
    description: Paged list of elements
  PrettyContractingSuborder:
    type: object
    properties:
      expectedDeliveryDate:
        type: string
      imeiNumbers:
        type: array
        items:
          type: string
      mobileNumbers:
        type: array
        items:
          type: string
      multiplicity:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/LocalizedString'
      oneTimePriceInCents:
        type: integer
        format: int64
      privateCopyingLevyInCents:
        type: integer
        format: int64
      serialNumbers:
        type: array
        items:
          type: string
      status:
        type: string
    title: PrettyContractingSuborder
  PrettyOrderDetails:
    type: object
    properties:
      appleDepEnrollment:
        $ref: '#/definitions/OperationAvailability'
      appleDepId:
        type: string
      cancelOrder:
        $ref: '#/definitions/OrderCancelStatus'
      changePortingData:
        $ref: '#/definitions/OperationAvailability'
      changeWishDate:
        $ref: '#/definitions/OperationAvailability'
      creationDate:
        type: string
        format: date-time
      customerReference:
        type: string
      deliveryAddress:
        $ref: '#/definitions/Address'
      deliveryId:
        type: string
      eSimConfirmationCode:
        type: string
      eSimEmail:
        type: string
      finishDate:
        type: string
        format: date-time
      firstPossibleWishDate:
        type: string
        format: date-time
      flexibleNumberPresentation:
        $ref: '#/definitions/FlexibleNumberPresentation'
      id:
        type: integer
        format: int64
      invoiceAddress:
        $ref: '#/definitions/Address'
      items:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/PrettyContractingSuborder'
      kpnReference:
        type: string
      msisdn:
        type: string
      oneTimeCostInCents:
        type: integer
        format: int32
      personsInvolved:
        $ref: '#/definitions/OrderParticipants'
      portingCustomerNumber:
        type: string
      portingMessage:
        type: string
      recurringCostInCents:
        type: integer
        format: int32
      registeredForAppleDep:
        type: boolean
      registeredForSamsungKnox:
        type: boolean
      requiredAction:
        type: string
        enum:
        - AUTHORIZATION
        - PORT_IN_DATA_CHANGE
      returnHardware:
        $ref: '#/definitions/OperationAvailability'
      samsungKnoxEnrollment:
        $ref: '#/definitions/OperationAvailability'
      samsungKnoxId:
        type: string
      sim:
        type: string
      status:
        type: string
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
      thresholds:
        type: object
        description: "Possible keys: VOICE_NATIONAL_MIN, VOICE_ROAMING_EUR, DATA_NATIONAL_MB, DATA_ROAMING_MB"
        additionalProperties:
          $ref: '#/definitions/Threshold'
      type:
        $ref: '#/definitions/LocalizedString'
      wishDate:
        type: string
        format: date-time
    title: PrettyOrderDetails
  Product:
    type: object
    properties:
      bsId:
        type: integer
        format: int64
      name:
        type: string
      oneTimePriceInCents:
        type: integer
        format: int64
      privateCopyingLevyInCents:
        type: integer
        format: int64
    title: Product
  ReturnedHardware:
    type: object
    properties:
      multiplicity:
        type: integer
        format: int32
      product:
        type: string
    title: ReturnedHardware
  ReturnedHardwareServiceRequests:
    type: object
    properties:
      creationDate:
        type: string
      id:
        type: integer
        format: int64
      kpnReference:
        type: string
      parentOrderSymbol:
        type: string
      requestBy:
        $ref: '#/definitions/OrderParticipant'
      returnedHardware:
        type: array
        items:
          $ref: '#/definitions/ReturnedHardware'
      status:
        type: string
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
    title: ReturnedHardwareServiceRequests
  Serializable:
    type: object
    title: Serializable
  ServiceRequest:
    type: object
    properties:
      creationDate:
        type: string
      customerReference:
        type: string
      finishDate:
        type: string
        format: date-time
      fixedNumber:
        type: string
      id:
        type: integer
        format: int64
      isBeingCanceled:
        type: boolean
      kpnReference:
        type: string
      msisdn:
        type: string
      orderedBy:
        $ref: '#/definitions/OrderParticipant'
      orderedFor:
        $ref: '#/definitions/OrderReceiver'
      requiredAction:
        type: string
        enum:
        - AUTHORIZATION
        - PORT_IN_DATA_CHANGE
      status:
        type: string
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
      type:
        $ref: '#/definitions/LocalizedString'
    title: ServiceRequest
  ServiceRequestDetails:
    type: object
    properties:
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      attributes:
        type: object
        properties: {}
      cancelOrder:
        $ref: '#/definitions/OrderCancelStatus'
      creationDate:
        type: string
        format: date-time
      customerReference:
        type: string
      expectedDate:
        type: string
        format: date-time
      finishDate:
        type: string
        format: date-time
      flexibleNumberPresentation:
        $ref: '#/definitions/FlexibleNumberPresentation'
      hardwareItems:
        type: array
        items:
          $ref: '#/definitions/HardwareSuborder'
      id:
        type: integer
        format: int64
      invoiceAddress:
        $ref: '#/definitions/Address'
      kpnReference:
        type: string
      modifiedItems:
        type: array
        items:
          $ref: '#/definitions/ContractServiceUpdate'
      newSim:
        type: string
      personsInvolved:
        $ref: '#/definitions/OrderParticipants'
      reactivate:
        $ref: '#/definitions/OperationAvailability'
      requiredAction:
        type: string
        enum:
        - AUTHORIZATION
        - PORT_IN_DATA_CHANGE
      sim:
        type: string
      status:
        type: string
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
      thresholds:
        type: object
        description: "Possible keys: VOICE_NATIONAL_MIN, VOICE_ROAMING_EUR, DATA_NATIONAL_MB, DATA_ROAMING_MB"
        additionalProperties:
          $ref: '#/definitions/Threshold'
      totalPriceInCents:
        type: integer
        format: int64
      type:
        $ref: '#/definitions/LocalizedString'
      wishDate:
        type: string
        format: date-time
    title: ServiceRequestDetails
  Threshold:
    type: object
    properties:
      dailyValue:
        type: number
        format: float
      id:
        type: integer
        format: int64
      name:
        type: string
      type:
        type: string
        enum:
        - DATA_NATIONAL_MB
        - DATA_ROAMING_MB
        - VOICE_NATIONAL_MIN
        - VOICE_ROAMING_EUR
    title: Threshold
  AuthorizeRequest:
    type: object
    properties:
      orderId:
        type: integer
        format: int64
    title: AuthorizeRequest
  BlockSimRequest:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      referenceNumber:
        type: string
    title: BlockSimRequest
  BlockingOrder:
    type: object
    properties:
      id:
        type: integer
        format: int64
      kpnReference:
        type: string
      status:
        type: string
        enum:
        - IN_PROGRESS
        - UNAUTHORIZED
        - NEW
        - CLOSED
        - CANCELED
        - REJECTED
        - DRAFT
        - THIRD_PARTY
        - HOLD_CUSTOMER
        - WAITING
      type:
        type: string
        enum:
        - CONTRACTING
        - SERVICE_REQUEST
    title: BlockingOrder
  HardwareEnrollmentRequest:
    type: object
    properties:
      orderId:
        type: integer
        format: int64
        description: Id of order which hardware was ordered
      referenceNumber:
        type: string
    title: HardwareEnrollmentRequest
  MoveContractRequest:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      destinationGroupId:
        type: integer
        format: int64
      moveAddonBundles:
        type: boolean
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: MoveContractRequest
  OperationAvailability1:
    type: object
    properties:
      blockingOrders:
        type: array
        items:
          $ref: '#/definitions/BlockingOrder'
      enabled:
        type: boolean
      visible:
        type: boolean
    title: OperationAvailability
  OperationsAvailability:
    type: object
    properties:
      blockSim:
        $ref: '#/definitions/OperationAvailability'
      combineFixedMobile:
        $ref: '#/definitions/OperationAvailability'
      contractId:
        type: integer
        format: int64
      modify:
        $ref: '#/definitions/OperationAvailability'
      move:
        $ref: '#/definitions/OperationAvailability'
      portOut:
        $ref: '#/definitions/OperationAvailability'
      replaceSim:
        $ref: '#/definitions/OperationAvailability'
      separateFixedMobile:
        $ref: '#/definitions/OperationAvailability'
      terminate:
        $ref: '#/definitions/OperationAvailability'
      unblockSim:
        $ref: '#/definitions/OperationAvailability'
    title: OperationsAvailability
  OrderSummary:
    type: object
    properties:
      contextName:
        type: string
      creationDate:
        type: string
      id:
        type: integer
        format: int64
      operation:
        type: string
      referenceNumber:
        type: string
      status:
        type: string
        enum:
        - Failed
        - Aborted
        - Finished
        - Suspended
        - InProgress
        - Waiting
        - Draft
        - WaitingForAuthorization
        - Authorized
        - Restored
        - Canceled
        - Scheduled
        - Initialized
        - Rejected
        - ExternalScheduled
    title: OrderSummary
  PortingOutRequest:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: PortingOutRequest
  ReplaceSimRequest:
    type: object
    properties:
      confirmationCode:
        type: string
      contractId:
        type: integer
        format: int64
      email:
        type: string
      esim:
        type: boolean
      newSimCardNumber:
        type: string
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: ReplaceSimRequest
  ReturnHardwareRequest:
    type: object
    properties:
      email:
        type: string
      hardwareToReturn:
        type: array
        description: "Contract items' ids which represent hardware (you can find them in track-and-trace-service/orders/{id}/hardware)"
        items:
          type: integer
          format: int64
      orderId:
        type: integer
        format: int64
        description: Id of order which hardware was ordered
      reason:
        type: string
        enum:
        - WRONG_DELIVERY
        - DEFECTIVE_ON_ARRIVAL
        - OTHER
      referenceNumber:
        type: string
      remarks:
        type: string
    title: ReturnHardwareRequest
  TerminateContractRequest:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: TerminateContractRequest
  TerminationFee:
    type: object
    properties:
      terminationFeeInCents:
        type: integer
        format: int32
    title: TerminationFee
  UiccidValidationData:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      newSimCardNumber:
        type: string
    title: UiccidValidationData
  UnblockSimRequest:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      referenceNumber:
        type: string
    title: UnblockSimRequest
  BulkOrderSummary:
    type: object
    properties:
      orders:
        type: array
        items:
          $ref: '#/definitions/CreatedOrder'
      referenceNumber:
        type: string
    title: BulkOrderSummary
  BusinessLocationDetails:
    type: object
    properties:
      activeFrom:
        type: string
        format: date-time
      activeTo:
        type: string
        format: date-time
      contactEmail:
        type: string
      contactName:
        type: string
      contactPhoneNumber:
        type: string
      expectedNumberOfUsers:
        type: integer
        format: int64
      externalAccountNumber:
        type: string
      primaryAddress:
        $ref: '#/definitions/LocationAddress'
    title: BusinessLocationDetails
  Contract:
    type: object
    properties:
      category:
        type: string
      extension:
        type: string
      firstName:
        type: string
      fixedNumber:
        type: string
      id:
        type: integer
        format: int64
      imei:
        type: string
      lastName:
        type: string
      mobileNumber:
        type: string
      namePrefix:
        type: string
      product:
        $ref: '#/definitions/LocalizedString'
      productCategory:
        type: string
      simCardNumber:
        type: string
      sipAccount:
        type: string
      state:
        type: string
        enum:
        - ACTIVE
        - CLOSED
        - ORDERED
        - PENDING
        - BLOCKED
    title: Contract
  CostCenterDetails:
    type: object
    properties:
      number:
        type: string
    title: CostCenterDetails
  CreateCostCenterRequestParams:
    type: object
    properties:
      costCenterNumber:
        type: string
      groupId:
        type: integer
        format: int64
      name:
        type: string
    title: CreateCostCenterRequestParams
  CreateGroupResponse:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
    title: CreateGroupResponse
  CreateSubscriberRequestParams:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
      referenceNumber:
        type: string
      subscriber:
        $ref: '#/definitions/SubscriberDetailsRequestParams'
      userAdditionalInfo:
        $ref: '#/definitions/UserAdditionalInfo'
    title: CreateSubscriberRequestParams
  CreateVirtualGroupRequestParams:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
      name:
        type: string
    title: CreateVirtualGroupRequestParams
  CreatedOrder:
    type: object
    properties:
      contextName:
        type: string
      id:
        type: integer
        format: int64
      operation:
        type: string
    title: CreatedOrder
  CustomerDetails:
    type: object
    properties:
      billingOwner:
        type: string
      billingRetentionPeriod:
        type: string
        enum:
        - "6"
        - "25"
      ckrNumber:
        type: string
      krnNumber:
        type: string
      orderFrozen:
        type: boolean
      orderFrozenFrom:
        type: string
        format: date-time
      orderFrozenTo:
        type: string
        format: date-time
    title: CustomerDetails
  DebtorDetails:
    type: object
    properties:
      activeFrom:
        type: string
        format: date-time
      additionalInvoiceLayuot:
        type: string
        enum:
        - CSV
        - XML
      appleDepId:
        type: string
      billingAddress:
        $ref: '#/definitions/LocationAddress'
      inviceFlag:
        type: boolean
      invoiceDistribution:
        type: string
        enum:
        - MAIL
        - EMAIL
        - EINVOICE
      invoiceLanguage:
        type: string
        enum:
        - EN
        - NL
      krnNumber:
        type: string
      primaryAddress:
        $ref: '#/definitions/LocationAddress'
      primaryEmail:
        type: string
      samsungKnoxId:
        type: string
    title: DebtorDetails
  DeleteSubscriberRequestParams:
    type: object
    properties:
      referenceNumber:
        type: string
    title: DeleteSubscriberRequestParams
  EditRolesRequest:
    type: object
    properties:
      rolesToAdd:
        type: array
        items:
          type: integer
          format: int64
      rolesToRemove:
        type: array
        items:
          type: integer
          format: int64
    title: EditRolesRequest
  GripEntity:
    type: object
    properties:
      email:
        type: string
      employeeNumber:
        type: string
      firstName:
        type: string
      fixedNumber:
        type: string
      gender:
        type: string
        enum:
        - MALE
        - FEMALE
        - OTHER
      id:
        type: integer
        format: int64
      mobileNumber:
        type: string
      preferredLanguage:
        type: string
        enum:
        - EN
        - NL
      surname:
        type: string
      userName:
        type: string
    title: GripEntity
  HierarchyItemDetails:
    type: object
    properties:
      businessLocation:
        $ref: '#/definitions/BusinessLocationDetails'
      costCenter:
        $ref: '#/definitions/CostCenterDetails'
      customer:
        $ref: '#/definitions/CustomerDetails'
      debtor:
        $ref: '#/definitions/DebtorDetails'
      name:
        type: string
      path:
        type: array
        items:
          $ref: '#/definitions/VirtualHierarchyItem'
    title: HierarchyItemDetails
  HierarchyItemOperationsAvailability:
    type: object
    properties:
      createCostCenter:
        $ref: '#/definitions/HierarchyOperationEnabled'
      createSubscriber:
        $ref: '#/definitions/HierarchyOperationEnabled'
      createVirtualGroup:
        $ref: '#/definitions/HierarchyOperationEnabled'
      move:
        $ref: '#/definitions/HierarchyOperationEnabled'
      remove:
        $ref: '#/definitions/HierarchyOperationEnabled'
      update:
        $ref: '#/definitions/HierarchyOperationEnabled'
    title: HierarchyItemOperationsAvailability
  HierarchyOperationEnabled:
    type: object
    properties:
      enabled:
        type: boolean
      reason:
        type: string
    title: HierarchyOperationEnabled
  HierarchyOperationsAvailability:
    type: object
    properties:
      create:
        $ref: '#/definitions/HierarchyOperationEnabled'
      edit:
        $ref: '#/definitions/HierarchyOperationEnabled'
      move:
        $ref: '#/definitions/HierarchyOperationEnabled'
      remove:
        $ref: '#/definitions/HierarchyOperationEnabled'
      view:
        $ref: '#/definitions/HierarchyOperationEnabled'
    title: HierarchyOperationsAvailability
  LinkSubscriberToGripRequestParams:
    type: object
    properties:
      email:
        type: string
      fixedNumber:
        type: string
        description: Should apply to format 31XXXYYYZZZ or 0XXXYYYZZZ
      gripEntityId:
        type: integer
        format: int64
      managedEntities:
        type: array
        items:
          type: integer
          format: int64
      mobileNumber:
        type: string
        description: Should apply to format 316XXXYYYZZ or 06XXXYYYZZ
      referenceNumber:
        type: string
      roles:
        type: array
        items:
          type: integer
          format: int64
      subscriberId:
        type: integer
        format: int64
    title: LinkSubscriberToGripRequestParams
  LocationAddress:
    type: object
    properties:
      attention:
        type: string
      city:
        type: string
      country:
        type: string
      floor:
        type: string
      houseNumber:
        type: string
      location:
        type: string
      partyName:
        type: string
      poBoxNumber:
        type: string
      postalCode:
        type: string
      room:
        type: string
      street:
        type: string
    title: LocationAddress
  ManagedGroupAssignmentParams:
    type: object
    properties:
      groupIds:
        type: array
        items:
          type: integer
          format: int64
    title: ManagedGroupAssignmentParams
  MoveGroupsParams:
    type: object
    properties:
      destinationGroupId:
        type: integer
        format: int64
      movedGroupIds:
        type: array
        items:
          type: integer
          format: int64
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: MoveGroupsParams
  MoveSubscriberRequestParams:
    type: object
    properties:
      destinationGroupId:
        type: integer
        format: int64
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: MoveSubscriberRequestParams
  OperationEnabled:
    type: object
    properties:
      blockingOrders:
        type: array
        items:
          $ref: '#/definitions/BlockingOrder'
      enabled:
        type: boolean
    title: OperationEnabled
  OperationState:
    type: object
    properties:
      blocked:
        type: boolean
      blockingOrders:
        type: array
        items:
          $ref: '#/definitions/BlockingOrder'
      reason:
        type: string
    title: OperationState
  PagedResult_Contract_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Contract'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Contract_
    description: Paged list of elements
  PagedResult_Role_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Role'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Role_
    description: Paged list of elements
  PagedResult_Subscriber_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Subscriber'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Subscriber_
    description: Paged list of elements
  PagedResult_VirtualHierarchyItem_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/VirtualHierarchyItem'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_VirtualHierarchyItem_
    description: Paged list of elements
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      selected:
        type: boolean
    title: Role
  Subscriber:
    type: object
    properties:
      contracts:
        $ref: '#/definitions/SubscriberContracts'
      employeeNumber:
        type: string
      firstName:
        type: string
      fixedNumber:
        type: string
      gripUser:
        type: boolean
      id:
        type: integer
        format: int64
      lastName:
        type: string
      path:
        type: array
        items:
          $ref: '#/definitions/VirtualHierarchyItem'
      prefix:
        type: string
      user:
        type: boolean
    title: Subscriber
  SubscriberContracts:
    type: object
    properties:
      amount:
        type: integer
        format: int32
      firstPhoneNumber:
        type: string
    title: SubscriberContracts
  SubscriberDetails:
    type: object
    properties:
      comments:
        type: string
      email:
        type: string
      employeeNumber:
        type: string
      firstName:
        type: string
      fixedNumber:
        type: string
      gender:
        type: string
        enum:
        - MALE
        - FEMALE
        - OTHER
      gripUser:
        type: boolean
      id:
        type: integer
        format: int64
      location:
        type: array
        items:
          type: string
      mobileNumber:
        type: string
      path:
        type: array
        items:
          $ref: '#/definitions/VirtualHierarchyItem'
      preferredLanguage:
        type: string
        enum:
        - EN
        - NL
      surname:
        type: string
      surnamePrefix:
        type: string
      user:
        type: boolean
      vip:
        type: boolean
    title: SubscriberDetails
  SubscriberDetailsRequestParams:
    type: object
    required:
    - surname
    properties:
      comments:
        type: string
        minLength: 0
        maxLength: 4000
      email:
        type: string
      employeeNumber:
        type: string
        minLength: 0
        maxLength: 100
      firstName:
        type: string
        minLength: 0
        maxLength: 100
      fixedNumber:
        type: string
        description: Should apply to format 31XXXYYYZZZ or 0XXXYYYZZZ
      gender:
        type: string
        enum:
        - MALE
        - FEMALE
        - OTHER
      mobileNumber:
        type: string
        description: Should apply to format 316XXXYYYZZ or 06XXXYYYZZ
      preferredLanguage:
        type: string
        enum:
        - EN
        - NL
      surname:
        type: string
        minLength: 1
        maxLength: 100
      surnamePrefix:
        type: string
        minLength: 0
        maxLength: 32
      vip:
        type: boolean
    title: SubscriberDetailsRequestParams
  SubscriberOperationsAvailability:
    type: object
    properties:
      editable:
        $ref: '#/definitions/OperationEnabled'
      movable:
        $ref: '#/definitions/OperationEnabled'
      removable:
        $ref: '#/definitions/OperationEnabled'
      rolesEditable:
        $ref: '#/definitions/OperationEnabled'
    title: SubscriberOperationsAvailability
  UpdateChildRequestParams:
    type: object
    properties:
      costCenterNumber:
        type: string
      name:
        type: string
    title: UpdateChildRequestParams
  UpdateSubscriberRequestParams:
    type: object
    properties:
      referenceNumber:
        type: string
      subscriber:
        $ref: '#/definitions/SubscriberDetailsRequestParams'
    title: UpdateSubscriberRequestParams
  UserAdditionalInfo:
    type: object
    properties:
      gripEntityId:
        type: integer
        format: int64
      managedEntities:
        type: array
        items:
          type: integer
          format: int64
      roles:
        type: array
        items:
          type: integer
          format: int64
    title: UserAdditionalInfo
  VirtualHierarchyItem:
    type: object
    properties:
      costCenterNumber:
        type: string
      email:
        type: string
      employeeNumber:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      name:
        type: string
      operation:
        $ref: '#/definitions/OperationState'
      path:
        type: array
        items:
          $ref: '#/definitions/VirtualHierarchyItem'
      prefix:
        type: string
      type:
        type: string
        enum:
        - CUSTOMER
        - DEBTOR
        - SUBSCRIBER
        - COST_CENTER
        - CUSTOM_GROUP
        - BUSINESS_LOCATION
    title: VirtualHierarchyItem
  ChangeBillingPeriodRequestParams:
    type: object
    properties:
      period:
        type: string
        enum:
        - "6"
        - "25"
      referenceNumber:
        type: string
    title: ChangeBillingPeriodRequestParams
  Invoice:
    type: object
    properties:
      date:
        type: string
        format: date-time
      debtorName:
        type: string
      id:
        type: integer
        format: int64
      number:
        type: string
      payBeforeDate:
        type: string
        format: date-time
      totalAmountToPayInCents:
        type: integer
        format: int32
      type:
        type: string
        enum:
        - CREDIT_NOTE
        - HARDWARE_ADJUSTMENT
        - HARDWARE_INVOICE
        - HARDWARE_INVOICE_ADJUSTMENT
        - SERVICE_ADJUSTMENT
        - SERVICE_INVOICE
        - SERVICE_INVOICE_ADJUSTMENT
    title: Invoice
  PagedResult_Invoice_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Invoice'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Invoice_
    description: Paged list of elements
  DeliveryAddress:
    type: object
    properties:
      addressName:
        type: string
      attention:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      floor:
        type: string
      houseNumber:
        type: string
      id:
        type: integer
        format: int64
      location:
        type: string
      postalCode:
        type: string
      room:
        type: string
      street:
        type: string
    title: DeliveryAddress
  DeliveryAddressRequest:
    type: object
    required:
    - city
    - companyName
    - country
    - houseNumber
    - postalCode
    - street
    properties:
      addressName:
        type: string
      attention:
        type: string
        minLength: 0
        maxLength: 35
      city:
        type: string
        minLength: 1
        maxLength: 30
      companyName:
        type: string
        minLength: 1
        maxLength: 35
      country:
        type: string
        description: Only "NL" value is supported
      floor:
        type: string
        minLength: 0
        maxLength: 21
      houseNumber:
        type: string
        minLength: 1
        maxLength: 5
      location:
        type: string
        minLength: 0
        maxLength: 21
      postalCode:
        type: string
        example: 1234AB
        description: should contain 4 digits first and then 2 letters
      room:
        type: string
        minLength: 0
        maxLength: 20
      street:
        type: string
        minLength: 1
        maxLength: 24
    title: DeliveryAddressRequest
  AssignContractsToThresholdRequestParams:
    type: object
    properties:
      contractsIds:
        type: array
        items:
          type: integer
          format: int64
    title: AssignContractsToThresholdRequestParams
  ContractDetails:
    type: object
    properties:
      activationDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      enterpriseId:
        type: string
      enterpriseName:
        type: string
      extension:
        type: string
      fixedMobilePbxId:
        type: string
      fixedMobilePbxName:
        type: string
      fixedNumber:
        type: string
      flexibleNumberPresentation:
        $ref: '#/definitions/FlexibleNumberPresentation'
      hierarchyPath:
        type: array
        description: Location of contract in company hierarchy
        items:
          $ref: '#/definitions/VirtualHierarchyItem'
      id:
        type: integer
        format: int64
      imei:
        type: string
      individualBundle:
        type: boolean
      lastStatusChangeDate:
        type: string
        format: date-time
      multiplicity:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/LocalizedString'
      pbxName:
        type: string
      phoneNumber:
        type: string
      pin:
        type: string
      puk:
        type: string
      simCardNumber:
        type: string
      sipAccount:
        type: string
      startDate:
        type: string
        format: date-time
      status:
        type: string
        description: "Possible values: A - active, C - closed, O - ordered, P - pending, S - blocked"
      tariffPlan:
        type: string
      uiccid:
        type: string
      userGroupId:
        type: string
      userGroupName:
        type: string
      userId:
        type: string
      userPrincipalName:
        type: string
    title: ContractDetails
  ContractForOperation:
    type: object
    properties:
      firstName:
        type: string
      fixedNumber:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      mobileNumber:
        type: string
      namePrefix:
        type: string
      operation:
        description: Information if combination is possible and eventualy reason why it is not
        $ref: '#/definitions/OperationState'
    title: ContractForOperation
  PagedResult_ContractForOperation_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/ContractForOperation'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_ContractForOperation_
    description: Paged list of elements
  RemoveThresholdParams:
    type: object
    properties:
      thresholdIds:
        type: array
        items:
          type: integer
          format: int64
    title: RemoveThresholdParams
  ThresholdDetails:
    type: object
    properties:
      changeType:
        $ref: '#/definitions/OperationEnabled'
      delete:
        $ref: '#/definitions/OperationEnabled'
      threshold:
        $ref: '#/definitions/Threshold'
    title: ThresholdDetails
  ThresholdRequestParams:
    type: object
    properties:
      dailyValue:
        type: number
        format: float
      name:
        type: string
      type:
        type: string
        enum:
        - VOICE_NATIONAL_MIN
        - VOICE_ROAMING_EUR
        - DATA_NATIONAL_MB
        - DATA_ROAMING_MB
    title: ThresholdRequestParams
  UnassignContractsFromThresholdRequestParams:
    type: object
    properties:
      contractsIds:
        type: array
        items:
          type: integer
          format: int64
    title: UnassignContractsFromThresholdRequestParams
  BasketChange:
    type: object
    properties:
      accountGroupId:
        type: integer
        format: int64
        description: Account group for which new contract is to be created (usually it is subscriber)
      characteristicActions:
        type: array
        items:
          $ref: '#/definitions/CharacteristicAction'
      contractId:
        type: integer
        format: int64
      fixedContractId:
        type: integer
        format: int64
      mobileContractId:
        type: integer
        format: int64
      orderId:
        type: integer
        format: int64
        description: Termination order (use this field to initialize reactivation in conjuction with accountGroupId)
      productActions:
        type: array
        items:
          $ref: '#/definitions/ProductAction'
      simCardNumber:
        type: string
      templateId:
        type: string
      templateIdToModify:
        type: integer
        format: int64
    title: BasketChange
  BasketSnapshot:
    type: object
    properties:
      characteristics:
        type: object
        additionalProperties:
          $ref: '#/definitions/Characteristic'
      oldPrice:
        $ref: '#/definitions/Price'
      productTree:
        type: array
        items:
          $ref: '#/definitions/ProductTreeItem'
      totalPrice:
        $ref: '#/definitions/Price'
    title: BasketSnapshot
  Characteristic:
    type: object
    properties:
      name:
        type: string
      possibleValues:
        type: array
        items:
          $ref: '#/definitions/CharacteristicRestriction'
      value:
        type: string
    title: Characteristic
  CharacteristicAction:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
    title: CharacteristicAction
  CharacteristicRestriction:
    type: object
    properties:
      caption:
        $ref: '#/definitions/LocalizedString'
      value:
        type: string
    title: CharacteristicRestriction
  DeliveryAddressRequest1:
    type: object
    required:
    - city
    - companyName
    - country
    - houseNumber
    - postalCode
    - street
    properties:
      addressName:
        type: string
      attention:
        type: string
        minLength: 0
        maxLength: 35
      city:
        type: string
        minLength: 1
        maxLength: 30
      companyName:
        type: string
        minLength: 1
        maxLength: 35
      country:
        type: string
        description: Only "NL" value is supported
      floor:
        type: string
        minLength: 0
        maxLength: 21
      houseNumber:
        type: string
        minLength: 1
        maxLength: 5
      location:
        type: string
        minLength: 0
        maxLength: 21
      postalCode:
        type: string
        example: 1234AB
        description: should contain 4 digits first and then 2 letters
      room:
        type: string
        minLength: 0
        maxLength: 20
      street:
        type: string
        minLength: 1
        maxLength: 24
    title: DeliveryAddressRequest
  Error:
    type: object
    properties:
      hint:
        $ref: '#/definitions/LocalizedString'
      message:
        $ref: '#/definitions/LocalizedString'
    title: Error
  File:
    type: object
    properties:
      absolute:
        type: boolean
      absoluteFile:
        $ref: '#/definitions/File'
      absolutePath:
        type: string
      canonicalFile:
        $ref: '#/definitions/File'
      canonicalPath:
        type: string
      directory:
        type: boolean
      executable:
        type: boolean
      file:
        type: boolean
      freeSpace:
        type: integer
        format: int64
      hidden:
        type: boolean
      lastModified:
        type: integer
        format: int64
      name:
        type: string
      parent:
        type: string
      parentFile:
        $ref: '#/definitions/File'
      path:
        type: string
      readable:
        type: boolean
      totalSpace:
        type: integer
        format: int64
      usableSpace:
        type: integer
        format: int64
      writable:
        type: boolean
    title: File
  OneTimePrice:
    type: object
    properties:
      activationFeeInCents:
        type: number
      hardwareFeeInCents:
        type: number
      privateCopyingLevyInCents:
        type: number
    title: OneTimePrice
  OrderConfirmation:
    type: object
    properties:
      orderId:
        type: integer
        format: int64
    title: OrderConfirmation
  OrderRequest:
    type: object
    properties:
      address:
        $ref: '#/definitions/DeliveryAddressRequest'
      addressId:
        type: integer
        format: int64
      referenceNumber:
        type: string
      wishDate:
        type: string
        format: date-time
    title: OrderRequest
  PagedResult_Product_1:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Product1'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Product_1
    description: Paged list of elements
  Product1:
    type: object
    properties:
      category:
        type: string
        enum:
        - CENTREX
        - FIXED
        - FIXED_MOBILE
        - HARDWARE
        - MOBILE
        - OTHER
        - SKYPE_FOR_BUSINESS
        - SOFTWARE
      id:
        type: string
      name:
        $ref: '#/definitions/LocalizedString'
      priceInCents:
        type: number
      privateCopyingLevyInCents:
        type: number
      subcategory:
        type: string
    title: Product1
  PagedResult_Product_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Product'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Product_
    description: Paged list of elements
  PagedResult_Template_:
    type: object
    properties:
      result:
        type: array
        description: One page of result
        items:
          $ref: '#/definitions/Template'
      total:
        type: integer
        format: int32
        description: Total number of all elements in collection
    title: PagedResult_Template_
    description: Paged list of elements
  Price:
    type: object
    properties:
      oneTime:
        $ref: '#/definitions/OneTimePrice'
      recurring:
        $ref: '#/definitions/RecurringPrice'
    title: Price
  ProductAction:
    type: object
    properties:
      amount:
        type: integer
        format: int32
      productId:
        type: string
      type:
        type: string
        enum:
        - PUT
        - REMOVE
    title: ProductAction
  ProductTreeItem:
    type: object
    properties:
      amount:
        type: integer
        format: int32
      canOrderMoreThanOne:
        type: boolean
      children:
        type: array
        items:
          $ref: '#/definitions/ProductTreeItem'
      childrenSelectionStrategy:
        type: string
        description: Information how many children of this item can be selected
        enum:
        - SELECT_ONE
        - SELECT_MANY
        - NONE
      contracted:
        type: boolean
        description: Is already contracted (important during contract modification)?
      disabled:
        type: boolean
        description: Can be select / deselect?
      error:
        $ref: '#/definitions/Error'
      id:
        type: string
      name:
        $ref: '#/definitions/LocalizedString'
      price:
        $ref: '#/definitions/Price'
      selected:
        type: boolean
        description: Is currently selected?
      visible:
        type: boolean
        description: Should be presented to end user?
    title: ProductTreeItem
  RecurringPrice:
    type: object
    properties:
      monthlyFeeInCents:
        type: number
    title: RecurringPrice
  Resource:
    type: object
    properties:
      address:
        type: string
      id:
        type: integer
        format: int64
    title: Resource
  SaveAsTemplateRequest:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
      name:
        type: string
    title: SaveAsTemplateRequest
  SaveAsTemplateResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
    title: SaveAsTemplateResponse
  SeparateFixedMobileRequest:
    type: object
    properties:
      contractId:
        type: integer
        format: int64
      referenceNumber:
        type: string
    title: SeparateFixedMobileRequest
  Template:
    type: object
    properties:
      customerLevel:
        type: boolean
      id:
        type: string
      name:
        type: string
      product:
        $ref: '#/definitions/Product'
      reason:
        type: string
        enum:
        - INVALID_PRODUCT_CONFIGURATION
        - HARDWARE_IN_TEMPLATE
        - NOT_SUPPORTED_PRODUCT
      templateDefinitionId:
        type: integer
        format: int64
      valid:
        type: boolean
    title: Template
  TemplateDetailsWithLocations:
    type: object
    properties:
      customerLevel:
        type: boolean
      id:
        type: integer
        format: int64
      items:
        type: array
        items:
          $ref: '#/definitions/TemplateItem'
      locations:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/VirtualHierarchyItem'
      name:
        type: string
      valid:
        type: boolean
    title: TemplateDetailsWithLocations
  TemplateItem:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/TemplateItem'
      option:
        type: string
        enum:
        - NOT_AVAILABLE
        - AVAILABLE
        - DEFAULT_DESELECTED
        - DEFAULT_SELECTED
        - REQUIRED
      productName:
        $ref: '#/definitions/LocalizedString'
    title: TemplateItem
  TemplateOverview:
    type: object
    properties:
      customerLevel:
        type: boolean
      id:
        type: integer
        format: int64
      name:
        type: string
      valid:
        type: boolean
    title: TemplateOverview
